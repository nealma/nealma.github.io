<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nealma.com</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.nealma.com/"/>
  <updated>2017-04-19T04:27:34.000Z</updated>
  <id>http://www.nealma.com/</id>
  
  <author>
    <name>马英乘Neal</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring-Boot（十) JPA Hibernate</title>
    <link href="http://www.nealma.com/2017/04/18/spring-boot-10-jpa-hibernate/"/>
    <id>http://www.nealma.com/2017/04/18/spring-boot-10-jpa-hibernate/</id>
    <published>2017-04-18T03:46:45.000Z</published>
    <updated>2017-04-19T04:27:34.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>一直都在用MyBatis，感觉很好用，自己也熟悉。考虑到Spring Boot天生支持JPA，而且Hibernate也支持
分布式事务，有成熟的解决方案，值得研究一下
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>一直都在用MyBatis，感觉很好用，自己也熟悉。考虑到Spring Boot天生支持JPA，而且Hibernate也支持
分布式事务，有成熟的解决方案，值得研究一下
</code></pre><p>开发环境：<br>OS: Mac 10.11.6<br>IDE: IDEA<br>Build: Maven</p>
<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line"></div><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;mysql&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</div><div class="line">	&lt;scope&gt;runtime&lt;/scope&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h3 id="JPA-Config"><a href="#JPA-Config" class="headerlink" title="JPA Config"></a>JPA Config</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">@Order(Ordered.HIGHEST_PRECEDENCE)</div><div class="line">@Configuration</div><div class="line">@EnableTransactionManagement(proxyTargetClass = true)</div><div class="line">@EnableJpaRepositories(basePackages = &quot;tech.lingyi.**.dao&quot;)</div><div class="line">@EntityScan(basePackages = &quot;tech.lingyi.**.entity&quot;)</div><div class="line">public class JpaConfiguration &#123;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor()&#123;</div><div class="line">        return new PersistenceExceptionTranslationPostProcessor();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="业务接口"><a href="#业务接口" class="headerlink" title="业务接口"></a>业务接口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Repository</div><div class="line">public interface UserRepository extends JpaRepository&lt;User, Long&gt; &#123;</div><div class="line">    Page&lt;User&gt; findAll(Specification&lt;User&gt; s, Pageable pageRequest);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<pre><code>JPA 实现了几乎我们所用的所有方法，你需要继承就可以了，提高了生产效率，解放了广大码农，可以去约妹子了。
</code></pre><h3 id="JPA-CRUD-和-联合条件、分页查询"><a href="#JPA-CRUD-和-联合条件、分页查询" class="headerlink" title="JPA CRUD 和 联合条件、分页查询"></a>JPA CRUD 和 联合条件、分页查询</h3><ul>
<li><p>insert</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public User insert()&#123;</div><div class="line">	User user = new User();</div><div class="line">	user.setNickname(&quot;neal&quot;);</div><div class="line">	return userRepository.save(user);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>updateByPK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">public User updateByPK()&#123;</div><div class="line">	User user = new User();</div><div class="line">    user.setId(31L);</div><div class="line">	user.setNickname(&quot;lingyi&quot;);</div><div class="line">	return userRepository.save(user);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>deleteByPK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">public void deleteByPK(Long id)&#123;</div><div class="line">	userRepository.delete(id);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>selectByPK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">public User selectByPK(Long id)&#123;</div><div class="line">	return userRepository.findOne(id);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>findPage 只分页 没有条件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public void  findPage()&#123;</div><div class="line">	Pageable pageable = new PageRequest(0,10, new Sort(</div><div class="line">									new Sort.Order(Sort.Direction.ASC, &quot;username&quot;),</div><div class="line">									new Sort.Order(Sort.Direction.DESC, &quot;id&quot;))</div><div class="line">	);</div><div class="line">	Page&lt;User&gt; page = userRepository.findAll(pageable);</div><div class="line">	Assert.notNull(page);</div><div class="line">	for (User user : page.getContent())&#123;</div><div class="line">		LOGGER.info(&quot;id=&#123;&#125;, name=&#123;&#125;, department=&#123;&#125;, role=&#123;&#125;&quot;, user.getId(), user.getNickname(), user.getUsername(),&quot;&quot;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>findPage 只分页 没有条件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public void  findPage()&#123;</div><div class="line">	Pageable pageable = new PageRequest(0,10, new Sort(</div><div class="line">									new Sort.Order(Sort.Direction.ASC, &quot;username&quot;),</div><div class="line">									new Sort.Order(Sort.Direction.DESC, &quot;id&quot;))</div><div class="line">	);</div><div class="line">	Page&lt;User&gt; page = userRepository.findAll(pageable);</div><div class="line">	Assert.notNull(page);</div><div class="line">	for (User user : page.getContent())&#123;</div><div class="line">		LOGGER.info(&quot;id=&#123;&#125;, name=&#123;&#125;, department=&#123;&#125;, role=&#123;&#125;&quot;, user.getId(), user.getNickname(), user.getUsername(),&quot;&quot;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>findCriteria, findCriteriaV2 两种方式 关联条件分页查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">public Page&lt;User&gt; findCriteria(final User user, int page, int pageSize) throws Exception &#123;</div><div class="line">	Sort sort = new Sort(Sort.Direction.DESC, &quot;id&quot;);</div><div class="line">	Pageable pageable  =  new PageRequest(page, pageSize, sort);</div><div class="line"></div><div class="line">	return userRepository.findAll((root, query, builder) -&gt; &#123;</div><div class="line">        List&lt;Predicate&gt; predicates = new ArrayList&lt;&gt;();</div><div class="line">        if(null != user.getUsername())&#123;</div><div class="line">            predicates.add(builder.equal(root.get(&quot;username&quot;).as(Long.class), user.getUsername()));</div><div class="line">        &#125;</div><div class="line">        if(null != user.getNickname())&#123;</div><div class="line">            predicates.add(builder.equal(root.get(&quot;nickname&quot;).as(String.class), user.getNickname()));</div><div class="line">        &#125;</div><div class="line">        query.where(predicates.toArray(new Predicate[predicates.size()]));</div><div class="line">        return query.getRestriction();</div><div class="line">    &#125;, pageable);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>OR<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">public Page&lt;User&gt; findCriteriaV2(final User user, int page, int pageSize) throws Exception &#123;</div><div class="line">	Sort sort = new Sort(Sort.Direction.DESC, &quot;id&quot;);</div><div class="line">	Pageable pageable  =  new PageRequest(page, pageSize, sort);</div><div class="line"></div><div class="line">	return userRepository.findAll((root, query, builder) -&gt; &#123;</div><div class="line">		Predicate p1 = builder.equal(root.get(&quot;username&quot;).as(String.class), user.getUsername());</div><div class="line">		Predicate p2 = builder.equal(root.get(&quot;nickname&quot;).as(Long.class), user.getNickname());</div><div class="line"></div><div class="line">		query.where(builder.and(p1, p2));</div><div class="line">		return query.getRestriction();</div><div class="line">	&#125;, pageable);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>使用频率最多的都列举出来了，够我们用了。
但是程序员就像偷懒，不想每个domain都要写个XxxRepository,写个基础BaseRepository岂不是节省好多事呢，有空在写吧...
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;一直都在用MyBatis，感觉很好用，自己也熟悉。考虑到Spring Boot天生支持JPA，而且Hibernate也支持
分布式事务，有成熟的解决方案，值得研究一下
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.nealma.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
      <category term="Hibernate" scheme="http://www.nealma.com/tags/Hibernate/"/>
    
      <category term="JPA" scheme="http://www.nealma.com/tags/JPA/"/>
    
  </entry>
  
  <entry>
    <title>【微信公众平台】自动回复机器人</title>
    <link href="http://www.nealma.com/2017/03/01/work-problerm-7-wx-mp-robot/"/>
    <id>http://www.nealma.com/2017/03/01/work-problerm-7-wx-mp-robot/</id>
    <published>2017-03-01T03:46:45.000Z</published>
    <updated>2017-04-19T03:50:52.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>微信公众号后台java开发实现自动回复机器人
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>很早之前写过微信公众平台消息自动接收的项目，现在重新捡起来，还有点忘了，故此写一篇记录，防止老年痴呆。
</code></pre><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul>
<li><p>注册微信公众号。</p>
</li>
<li><p>注册百度图灵机器人。（<a href="http://www.tuling123.com/）" target="_blank" rel="external">http://www.tuling123.com/）</a></p>
</li>
<li><p>配置微信公众号服务器验证，注意验证的接口方法是GET</p>
</li>
</ul>
<p>1）在开发的基本配置下，填写控制器servlet访问的路径。</p>
<p>2）token随意写，不过要和后台一致</p>
<p>3）选择明文</p>
<p>4）随机选个字符串</p>
<p>5) token验证和消息处理是同一个接口URI的不同的METHOD，valid是GET方法，handle是POST</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>百度图灵机器人可以直接选择微信公众号机器人，只要授权就可以了。
过成功遇到： 启用后台服务器接口消息的功能后，公众号的菜单没有了，还不知道怎么能两者兼得

 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;微信公众号后台java开发实现自动回复机器人
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="work" scheme="http://www.nealma.com/categories/work/"/>
    
    
      <category term="大杂烩" scheme="http://www.nealma.com/tags/%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
      <category term="微信" scheme="http://www.nealma.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="公众号" scheme="http://www.nealma.com/tags/%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
      <category term="机器人" scheme="http://www.nealma.com/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
      <category term="java" scheme="http://www.nealma.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>【IDEA】cannot resolve syambol xxx</title>
    <link href="http://www.nealma.com/2017/01/01/work-problerm-6-idea-cannot-resolve-syambol/"/>
    <id>http://www.nealma.com/2017/01/01/work-problerm-6-idea-cannot-resolve-syambol/</id>
    <published>2017-01-01T03:46:45.000Z</published>
    <updated>2017-04-18T04:20:25.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>cannot resolve syambol xxx
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>解决方法如下：<br>点击菜单中的 “File” -&gt; “Invalidate Caches / Restart”，然后点击对话框中的 “Invalidate and Restart”，清空 cache 并且重启。语法就会正确的高亮了。</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>还会陆续遇到各种坑，慢慢填吧...
 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;cannot resolve syambol xxx
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="work" scheme="http://www.nealma.com/categories/work/"/>
    
    
      <category term="MySQL" scheme="http://www.nealma.com/tags/MySQL/"/>
    
      <category term="大杂烩" scheme="http://www.nealma.com/tags/%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
      <category term="sql" scheme="http://www.nealma.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>常用的sql操作</title>
    <link href="http://www.nealma.com/2017/01/01/work-problerm-5-mysql-common-operate/"/>
    <id>http://www.nealma.com/2017/01/01/work-problerm-5-mysql-common-operate/</id>
    <published>2017-01-01T03:46:45.000Z</published>
    <updated>2017-03-09T01:51:58.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>频繁的sql操作，总结一些经常用的。
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>频繁的sql操作，总结一些经常用的。
</code></pre><h3 id="删除表中某个唯一约束"><a href="#删除表中某个唯一约束" class="headerlink" title="删除表中某个唯一约束"></a>删除表中某个唯一约束</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">DROP INDEX index_name ON tbl_name</div><div class="line"></div><div class="line">OR</div><div class="line"></div><div class="line">ALTER TABLE tbl_name DROP INDEX index_name</div></pre></td></tr></table></figure>
<h3 id="MySQL-查找所有的父级或子集"><a href="#MySQL-查找所有的父级或子集" class="headerlink" title="MySQL 查找所有的父级或子集"></a>MySQL 查找所有的父级或子集</h3><p>表结构及Demo数据<br>user_id  pid</p>
<p>  B</p>
<ul>
<li>查找所有的父级（包含本身）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SELECT T2.user_id</div><div class="line">            FROM (</div><div class="line">                  SELECT</div><div class="line">                    @r AS _id,</div><div class="line">                    (SELECT @r := pid FROM relations WHERE user_id = _id) AS pid,</div><div class="line">                    @l := @l + 1 AS lvl FROM (SELECT @r := 5, @l := 0) vars,</div><div class="line">                    relations h WHERE @r &lt;&gt; 0 AND pid &gt; 0</div><div class="line">                 ) T1 JOIN relations T2 ON T1._id = T2.user_id ORDER BY T1.lvl DESC</div></pre></td></tr></table></figure>
<ul>
<li>查找所有的子类（不包含本身）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT uesr_id FROM</div><div class="line">  (</div><div class="line">    SELECT * FROM relations where pid &gt; 0 ORDER BY pid, uesr_id DESC</div><div class="line">  ) realname_sorted,</div><div class="line">  (SELECT @pv := 1) initialisation</div><div class="line">  WHERE (FIND_IN_SET(pid,@pv)&gt;0 And @pv := concat(@pv, &apos;,&apos;, uesr_id))</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>还会陆续遇到各种坑，慢慢填吧...
 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;频繁的sql操作，总结一些经常用的。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="work" scheme="http://www.nealma.com/categories/work/"/>
    
    
      <category term="MySQL" scheme="http://www.nealma.com/tags/MySQL/"/>
    
      <category term="大杂烩" scheme="http://www.nealma.com/tags/%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
      <category term="sql" scheme="http://www.nealma.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7（六）购买阿里云ECS并安装Centos7.2镜像后要做的事儿</title>
    <link href="http://www.nealma.com/2016/12/29/centos-72-5-set-hostname/"/>
    <id>http://www.nealma.com/2016/12/29/centos-72-5-set-hostname/</id>
    <published>2016-12-29T03:46:49.000Z</published>
    <updated>2016-12-29T06:41:15.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>当我们购买完ECS，使用的事Centos7系统，并且是官方的镜像。总要做一些必要的操作，在此做个总结。
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>当我们购买完ECS，使用的事Centos7系统，并且是官方的镜像。总要做一些必要的操作，在此做个总结。
</code></pre><h3 id="yum-update-y-amp-amp-sudo-yum-upgrade-y"><a href="#yum-update-y-amp-amp-sudo-yum-upgrade-y" class="headerlink" title="yum update -y &amp;&amp; sudo yum upgrade -y"></a>yum update -y &amp;&amp; sudo yum upgrade -y</h3><h3 id="更改hostname"><a href="#更改hostname" class="headerlink" title="更改hostname"></a>更改hostname</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># hostnamectl --static set-hostname nealma</div><div class="line"></div><div class="line"># logout</div></pre></td></tr></table></figure>
<h3 id="安装基本工具"><a href="#安装基本工具" class="headerlink" title="安装基本工具"></a>安装基本工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum install -y vim tree htop wget telnet curl unzip gcc pcre-devel zlib-devel perl-devel</div></pre></td></tr></table></figure>
<h3 id="替换-etc-locale-conf-的内容，解决LC-CTYPE-cannot-change-locale-UTF-8"><a href="#替换-etc-locale-conf-的内容，解决LC-CTYPE-cannot-change-locale-UTF-8" class="headerlink" title="替换 /etc/locale.conf 的内容，解决LC_CTYPE: cannot change locale (UTF-8)"></a>替换 /etc/locale.conf 的内容，解决LC_CTYPE: cannot change locale (UTF-8)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">LANG=&quot;en_US.utf8&quot;</div><div class="line">LC_CTYPE=&quot;en_US.utf8&quot;</div><div class="line"></div><div class="line"># sudo source /etc/locale.conf</div></pre></td></tr></table></figure>
<h3 id="升级openssl"><a href="#升级openssl" class="headerlink" title="升级openssl"></a>升级openssl</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># cd /usr/local/src</div><div class="line"># wget https://www.openssl.org/source/openssl-1.1.0c.tar.gz</div><div class="line"># tar zxvf openssl-1.1.0c.tar.gz</div><div class="line"></div><div class="line"># cd openssl-1.1.0c</div><div class="line"># ./config</div><div class="line"># make</div><div class="line"># make test</div><div class="line"># make install</div><div class="line"></div><div class="line"># mv /usr/bin/openssl /usr/bin/openssl.old</div><div class="line"># ln -s /usr/local/bin/openssl /usr/bin/openssl</div><div class="line"></div><div class="line"># openssl version</div></pre></td></tr></table></figure>
<h3 id="解决openssl-error-while-loading-shared-libraries-libssl-so-1-1-cannot-open-shared-object-file-No-such-file-or-directory错误"><a href="#解决openssl-error-while-loading-shared-libraries-libssl-so-1-1-cannot-open-shared-object-file-No-such-file-or-directory错误" class="headerlink" title="解决openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory错误"></a>解决openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/lib64/libssl.so.1.1 /usr/lib64/libssl.so.1.1</div><div class="line">ln -s /usr/local/lib64/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1</div></pre></td></tr></table></figure>
<h3 id="创建普通用户"><a href="#创建普通用户" class="headerlink" title="创建普通用户"></a>创建普通用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># useradd nealma</div><div class="line">...</div><div class="line">参考前面一篇《CentOS 添加用户》</div></pre></td></tr></table></figure>
<h3 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">参考前面一篇 《CentOS7（一）Java环境搭建》</div></pre></td></tr></table></figure>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">参考前面一篇 《Nginx Configuration》</div><div class="line"></div><div class="line">Or use yum</div><div class="line"></div><div class="line">$ sudo yum install -y nginx</div><div class="line"></div><div class="line">$ sudo nginx -t</div><div class="line"></div><div class="line">$ sudo systemctl start nginx</div><div class="line"></div><div class="line">$ sudo systemctl stop nginx</div><div class="line"></div><div class="line">$ sudo systemctl restart nginx</div><div class="line"></div><div class="line">$ sudo systemctl enable nginx</div></pre></td></tr></table></figure>
<h3 id="阿里云控制台"><a href="#阿里云控制台" class="headerlink" title="阿里云控制台"></a>阿里云控制台</h3><ul>
<li>开通SLB</li>
<li>配置域名A记录</li>
<li>禁止外网访问 安全组</li>
</ul>
<h3 id="追加1-有用户反映首先应该有挂载磁盘"><a href="#追加1-有用户反映首先应该有挂载磁盘" class="headerlink" title="追加1 有用户反映首先应该有挂载磁盘"></a>追加1 有用户反映首先应该有挂载磁盘</h3><p><a href="https://help.aliyun.com/document_detail/25426.html?spm=5176.7738005.2.1.tHI6Uc" target="_blank" rel="external">直接参考阿里云文档</a></p>
<p>我直接使用了xfs文件系统，没有用文档上的ext3</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>随时增加后续内容</p>
<p>:)~</p>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;当我们购买完ECS，使用的事Centos7系统，并且是官方的镜像。总要做一些必要的操作，在此做个总结。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.nealma.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
      <category term="阿里云" scheme="http://www.nealma.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="ECS" scheme="http://www.nealma.com/tags/ECS/"/>
    
  </entry>
  
  <entry>
    <title>工作中遇到的问题（四） Maven 国内镜像 阿里云</title>
    <link href="http://www.nealma.com/2016/12/12/work-problerm-4-aliyun-maven-repo/"/>
    <id>http://www.nealma.com/2016/12/12/work-problerm-4-aliyun-maven-repo/</id>
    <published>2016-12-12T03:46:45.000Z</published>
    <updated>2016-12-12T16:14:13.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>今天在服务器上使用maven部署服务，我尼玛快疯疯了，一个jar文件真是慢如蜗牛，于是想换成一个速度快点的，
搜索之后，看到阿里云最近开放了Maven镜像库，那就试试吧，感谢啊，速度嗖嗖的.
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>今天在服务器上使用maven部署服务，我尼玛快疯疯了，一个jar文件真是慢如蜗牛，于是想换成一个速度快点的，
搜索之后，看到阿里云最近开放了Maven镜像库，那就试试吧，感谢啊，速度嗖嗖的.
</code></pre><h3 id="阿里云公开的中央仓库，亲测好用到哭"><a href="#阿里云公开的中央仓库，亲测好用到哭" class="headerlink" title="阿里云公开的中央仓库，亲测好用到哭"></a>阿里云公开的中央仓库，亲测好用到哭</h3><pre><code>修改maven根目录下的conf文件夹中的setting.xml文件，在mirrorms内添加如下内容：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;mirror&gt;</div><div class="line">   &lt;id&gt;alimaven&lt;/id&gt;</div><div class="line">   &lt;name&gt;aliyun maven&lt;/name&gt;</div><div class="line">   &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</div><div class="line">   &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;        </div><div class="line"> &lt;/mirror&gt;</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>我只有感谢感谢在感谢啦...
 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;今天在服务器上使用maven部署服务，我尼玛快疯疯了，一个jar文件真是慢如蜗牛，于是想换成一个速度快点的，
搜索之后，看到阿里云最近开放了Maven镜像库，那就试试吧，感谢啊，速度嗖嗖的.
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="work" scheme="http://www.nealma.com/categories/work/"/>
    
    
      <category term="阿里云" scheme="http://www.nealma.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="大杂烩" scheme="http://www.nealma.com/tags/%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
      <category term="Maven" scheme="http://www.nealma.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>工作中遇到的问题 (三) 微信支付</title>
    <link href="http://www.nealma.com/2016/12/12/work-problerm-3-wxpay/"/>
    <id>http://www.nealma.com/2016/12/12/work-problerm-3-wxpay/</id>
    <published>2016-12-12T02:46:45.000Z</published>
    <updated>2017-01-07T11:18:50.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>微信获取用户信息和微信H5支付
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>微信获取用户、ticket信息和微信H5支付
</code></pre><h3 id="微信获取ticket信息"><a href="#微信获取ticket信息" class="headerlink" title="微信获取ticket信息"></a>微信获取ticket信息</h3><ul>
<li><p>获取access_token</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=appid&amp;secret=appsecret</div></pre></td></tr></table></figure>
<p>  返回值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;access_token&quot;: &quot;xxxxx&quot;,</div><div class="line">    &quot;expires_in&quot;: 7200</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>获取jsapi_ticket</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://api.weixin.qq.com/cgi-bin/ticket/getticket?type=jsapi&amp;access_token=xxxxxx</div></pre></td></tr></table></figure>
<p>  返回值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;errcode&quot;: 0,</div><div class="line">    &quot;errmsg&quot;: &quot;ok&quot;,</div><div class="line">    &quot;ticket&quot;: &quot;sM4AOVdWfPE4DxkXGEs8VDd_c-Q_htialcX-c6Dxm8PROfcj2rA58GClUKytzCXuUGbwQLPTgdG0dPciNIv70A&quot;,</div><div class="line">    &quot;expires_in&quot;: 7200</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="微信H5支付流程"><a href="#微信H5支付流程" class="headerlink" title="微信H5支付流程"></a>微信H5支付流程</h3><ul>
<li>获取code</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">https://open.weixin.qq.com/connect/oauth2/authorize?appid=xxx&amp;redirect_uri=http://test.ruitaowang.com/test&amp;response_type=code&amp;scope=snsapi_base</div><div class="line"></div><div class="line">https://open.weixin.qq.com/connect/oauth2/authorize?appid=xxx&amp;redirect_uri=http://test.ruitaowang.com/wap/index&amp;response_type=code&amp;scope=snsapi_base</div><div class="line"></div><div class="line"># SCOPE : snsapi_base ,  snsapi_userinfo</div><div class="line"></div><div class="line">#返回值：</div><div class="line"></div><div class="line">http://test.ruitaowang.com/test?code=041JgA1q0382ir1Z0p0q0OZh1q0JgA1F&amp;state=</div></pre></td></tr></table></figure>
<ul>
<li>获取openid<br>获取code后，请求以下链接获取access_token：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">https://api.weixin.qq.com/sns/oauth2/access_token?appid=xxx&amp;secret=xxx&amp;code=021IDZDZ1PpbNX0vkHFZ1GqpEZ1IDZD3&amp;grant_type=authorization_code</div><div class="line"></div><div class="line">#返回值：</div><div class="line">&#123;</div><div class="line">	&quot;access_token&quot;:&quot;xxx&quot;,</div><div class="line">	&quot;expires_in&quot;:7200,</div><div class="line">	&quot;refresh_token&quot;:&quot;xxxx&quot;,</div><div class="line">	&quot;openid&quot;:&quot;xxx&quot;,</div><div class="line">	&quot;scope&quot;:&quot;snsapi_base&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#如果获取code的时候，scope=snsapi_userinfo,这种是需要用户登陆确认的，此处返回的值相应的多一些</div><div class="line"> &#123;</div><div class="line">	 &quot;access_token&quot;:&quot;xxxx&quot;,</div><div class="line">	 &quot;expires_in&quot;:7200,</div><div class="line">	 &quot;refresh_token&quot;:&quot;xxxx&quot;,</div><div class="line">	 &quot;openid&quot;:&quot;xxxx&quot;,</div><div class="line">	 &quot;scope&quot;:&quot;snsapi_userinfo&quot;,</div><div class="line">	 &quot;unionid&quot;:&quot;xxx&quot;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>拉取用户信息(需scope为 snsapi_userinfo)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#http：GET（请使用https协议）</div><div class="line">#https://api.weixin.qq.com/sns/userinfo?access_token=EHtVZcvhD6x475HJ2ukUc0u3BqiMdjJ2gc9x-j2fil4i63M-aS9qHVmcHxVw19tLdalzo8VjxIJzMyuIJKIiis1h2JoZmy5wRp9IWwiHxRab3cDu-SxQHSm10h47bHyVRKYeAEALES&amp;openid=OPENID&amp;lang=zh_CN</div><div class="line"></div><div class="line">#返回值</div><div class="line"></div><div class="line">&#123;</div><div class="line">	&quot;openid&quot;:&quot;xxxx&quot;,</div><div class="line">	&quot;nickname&quot;:&quot;neal&quot;,</div><div class="line">	&quot;sex&quot;:1,</div><div class="line">	&quot;language&quot;:&quot;zh_CN&quot;,</div><div class="line">	&quot;city&quot;:&quot;朝阳&quot;,</div><div class="line">	&quot;province&quot;:&quot;北京&quot;,</div><div class="line">	&quot;country&quot;:&quot;中国&quot;,</div><div class="line">	&quot;headimgurl&quot;:&quot;http:\/\/wx.qlogo.cn\/mmopen\/Aqtvh6YDJ6TZnQs24nyymaKibaYMqLlj6X4zvQQwL0icn2GOUAPxPrx6iaePr30syO9zQsibKLCb8WIuLS0H879caA\/0&quot;,</div><div class="line">	&quot;privilege&quot;:[],</div><div class="line">	&quot;unionid&quot;:&quot;xxxx&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>统一下单接口,获取prepay_id</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">http://api.weixin.qq.com/cgi-bin/ticket/getticket?type=jsapi&amp;access_token=EHtVZcvhD6x475HJ2ukUc0u3BqiMdjJ2gc9x-j2fil4i63M-aS9qHVmcHxVw19tLdalzo8VjxIJzMyuIJKIiis1h2JoZmy5wRp9IWwiHxRab3cDu-SxQHSm10h47bHyVRKYeAEALES</div><div class="line"></div><div class="line">＃https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1</div><div class="line"></div><div class="line">＃这里在服务端接口返回值中文会出现乱码，主要是body字段。也是坑了我好长的时间，因为我在本地开发的时候都正常，</div><div class="line">  部署到服务器就不行了，body字段是非中文没啥问题，但是一旦是中文就会失败。一开始以为是tomcat的问题，可是server.conf已经</div><div class="line">  是utf8的了，那就是微信API的问题，考虑对传入的字符进行String编码，所有的转码都是过了，还是不幸。</div><div class="line"></div><div class="line">  到底是那里出问题了，于是检查了下服务器的系统字符设置，locale -a,</div><div class="line">  发现，有警告。</div><div class="line">  第一感觉是系统的字符设置除了问题</div><div class="line">  于是各种Google,都是说设置en_US.UTF-8,可是看到Centos7 里面都是xxx.utf8</div><div class="line">  我试着把修改vim /etc/locale.conf如下：</div><div class="line"></div><div class="line">  LANG=&quot;en_US.utf8&quot;</div><div class="line">  LC_CTYPE=&quot;en_US.utf8&quot;</div><div class="line"></div><div class="line">  source /etc/locale.conf</div><div class="line"></div><div class="line">  #这下真好了，哎人生处处是大坑啊,我填，我填，其实这个问题对乱码的问题没有半毛钱关系，后来才知道的。</div><div class="line"></div><div class="line">  ##后续 有个地方是要更改的 那就是Tomcat</div><div class="line">  #server.conf配置</div><div class="line">	&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</div><div class="line">               connectionTimeout=&quot;20000&quot;</div><div class="line">               URIEncoding=&quot;UTF-8&quot;</div><div class="line">               redirectPort=&quot;8443&quot; /&gt;</div><div class="line"></div><div class="line">  #catalina.sh配置</div><div class="line">  JAVA_OPTS=&quot;$JAVA_OPTS -Dfile.encoding=utf-8&quot;</div></pre></td></tr></table></figure>
<ul>
<li>网页端调起支付API</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">#https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index=6</div><div class="line"></div><div class="line">function onBridgeReady()&#123;</div><div class="line">   WeixinJSBridge.invoke(</div><div class="line">       &apos;getBrandWCPayRequest&apos;, &#123;</div><div class="line">           &quot;appId&quot; ： &quot;xxx&quot;,     //公众号名称，由商户传入     </div><div class="line">           &quot;timeStamp&quot;：&quot; 1395712654&quot;,         //时间戳，自1970年以来的秒数     </div><div class="line">           &quot;nonceStr&quot; ： &quot;e61463f8efa94090b1f366cccfbbb444&quot;, //随机串     </div><div class="line">           &quot;package&quot; ： &quot;prepay_id=u802345jgfjsdfgsdg888&quot;,     </div><div class="line">           &quot;signType&quot; ： &quot;MD5&quot;,         //微信签名方式：     </div><div class="line">           &quot;paySign&quot; ： &quot;70EA570631E4BB79628FBCA90534C63FF7FADD89&quot; //微信签名,注意key要追加到参数尾部</div><div class="line">       &#125;,</div><div class="line">       function(res)&#123;     </div><div class="line">           if(res.err_msg == &quot;get_brand_wcpay_request：ok&quot; ) &#123;&#125;     // 使用以上方式判断前端返回,微信团队郑重提示：res.err_msg将在用户支付成功后返回    ok，但并不保证它绝对可靠。 </div><div class="line">       &#125;</div><div class="line">   ); </div><div class="line">&#125;</div><div class="line">if (typeof WeixinJSBridge == &quot;undefined&quot;)&#123;</div><div class="line">   if( document.addEventListener )&#123;</div><div class="line">       document.addEventListener(&apos;WeixinJSBridgeReady&apos;, onBridgeReady, false);</div><div class="line">   &#125;else if (document.attachEvent)&#123;</div><div class="line">       document.attachEvent(&apos;WeixinJSBridgeReady&apos;, onBridgeReady); </div><div class="line">       document.attachEvent(&apos;onWeixinJSBridgeReady&apos;, onBridgeReady);</div><div class="line">   &#125;</div><div class="line">&#125;else&#123;</div><div class="line">   onBridgeReady();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="通知接口"><a href="#通知接口" class="headerlink" title="通知接口"></a>通知接口</h3><p>首先设置notify_url,必须为公众号后台设置的授支付url.<br>你的notify_url的接受方法必须是POST,<br>返回值是xml结构</p>
<h3 id="接口权限-网页授权"><a href="#接口权限-网页授权" class="headerlink" title="接口权限 网页授权"></a>接口权限 网页授权</h3><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>在调试接口的时候，最耗费时间的是在网页端调起支付API,前前后后弄了两天，好狼狈啊！！！
主要是折在了paySign上，看文档根本就没有key的事，可是签名的时候，
还得在排序好的参数后架上key=xxx,然后在MD5，总算是让我可以好好睡一觉了


 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;微信获取用户信息和微信H5支付
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="work" scheme="http://www.nealma.com/categories/work/"/>
    
    
      <category term="大杂烩" scheme="http://www.nealma.com/tags/%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
  </entry>
  
  <entry>
    <title>工作中遇到的问题 (二) Ajax重复提交</title>
    <link href="http://www.nealma.com/2016/11/26/work-problerm-2/"/>
    <id>http://www.nealma.com/2016/11/26/work-problerm-2/</id>
    <published>2016-11-26T03:46:45.000Z</published>
    <updated>2016-12-11T08:47:03.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>最近也不知道写点啥，工作任务太饱和了，遇到些小问题，做个总结
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>最近也不知道写点啥，工作任务太饱和了，遇到些小问题，做个总结
</code></pre><h3 id="Linux-使用cp-rf-总是提醒是否覆盖"><a href="#Linux-使用cp-rf-总是提醒是否覆盖" class="headerlink" title="Linux 使用cp -rf 总是提醒是否覆盖"></a>Linux 使用cp -rf 总是提醒是否覆盖</h3><pre><code>刚觉很奇怪，rf本来就是要强制覆盖的，为什么还总是提醒呢？Google之后，才知道原来是别名在作怪。
通过alias命令可以看到,我们执行cp命令，其实是执行的cp -i, 所以无论我们怎么-rf加参数，总是提示。
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@apple]# alias</div><div class="line">alias cp=&apos;cp -i&apos;</div><div class="line">alias egrep=&apos;egrep --color=auto&apos;</div><div class="line">alias fgrep=&apos;fgrep --color=auto&apos;</div><div class="line">alias grep=&apos;grep --color=auto&apos;</div><div class="line">alias l.=&apos;ls -d .* --color=auto&apos;</div><div class="line">alias ll=&apos;ls -l --color=auto&apos;</div><div class="line">alias ls=&apos;ls --color=auto&apos;</div><div class="line">alias mv=&apos;mv -i&apos;</div><div class="line">alias rm=&apos;rm -i&apos;</div><div class="line">alias which=&apos;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&apos;</div></pre></td></tr></table></figure>
<pre><code>解决办法：

打开~/.bashrc文件，注释掉即可。
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#alias cp=&apos;cp -i&apos;</div></pre></td></tr></table></figure>
<pre><code>或者这样：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/cp</div></pre></td></tr></table></figure>
<h3 id="Ajax重复提交的问题"><a href="#Ajax重复提交的问题" class="headerlink" title="Ajax重复提交的问题"></a>Ajax重复提交的问题</h3><pre><code>我们在使用ajax调用接口，异步提交的时候，特别是在网络环境不好的时候，会在短时间内，连续提交多次，
导致数据库中出现很多垃圾数据，首先是客户端的限制措施。
</code></pre><ul>
<li>使用jQuery.ajaxPrefilter，其实是个过滤器，如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">var pendingRequests = &#123;&#125;;</div><div class="line">jQuery.ajaxPrefilter(function( options, originalOptions, jqXHR ) &#123;</div><div class="line">    var key = originalOptions.url+&quot;_&quot;+originalOptions.type.toUpperCase();</div><div class="line">    console.log(key)</div><div class="line">    if (!pendingRequests[key]</div><div class="line">            || (pendingRequests[key] &amp;&amp; originalOptions.type.toUpperCase() !=&apos;POST&apos;)) &#123;</div><div class="line">        pendingRequests[key] = jqXHR;</div><div class="line">        console.log(&apos;start&apos;);</div><div class="line">    &#125;else&#123;</div><div class="line">        jqXHR.abort();    //放弃后触发的提交</div><div class="line">        //pendingRequests[key].abort();   // 放弃先触发的提交</div><div class="line">        console.log(&apos;abort&apos;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    var complete = options.complete;</div><div class="line">    options.complete = function(jqXHR, textStatus) &#123;</div><div class="line">        console.log(&apos;complete&apos;);</div><div class="line">        //TODO: pendingRequests[key] = null;</div><div class="line">        setTimeout(function () &#123;</div><div class="line">            pendingRequests[key] = null;</div><div class="line">        &#125;, 10000);</div><div class="line">        if (jQuery.isFunction(complete)) &#123;</div><div class="line">            complete.apply(this, arguments);</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>服务器端限制</li>
</ul>
<p>…</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>夜长长，路漫漫...
 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;最近也不知道写点啥，工作任务太饱和了，遇到些小问题，做个总结
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="work" scheme="http://www.nealma.com/categories/work/"/>
    
    
      <category term="大杂烩" scheme="http://www.nealma.com/tags/%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
  </entry>
  
  <entry>
    <title>工作中遇到的问题（一） Spring MVC Restfull API</title>
    <link href="http://www.nealma.com/2016/11/26/work-problerm-1/"/>
    <id>http://www.nealma.com/2016/11/26/work-problerm-1/</id>
    <published>2016-11-26T03:46:45.000Z</published>
    <updated>2016-12-31T12:06:51.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>最近也不知道写点啥，工作任务太饱和了，遇到些小问题，做个总结
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>最近也不知道写点啥，工作任务太饱和了，遇到些小问题，做个总结
</code></pre><h3 id="MyBatis整型的问题"><a href="#MyBatis整型的问题" class="headerlink" title="MyBatis整型的问题"></a>MyBatis整型的问题</h3><pre><code>再一次工作中，一个实体的成员变量是整数型，我传递了0给mapper，奇怪的事情发生了。
mapper总是认为这个变量为null。前前后后花了好长时间，最后还是Google的结果。看来遇到问题不能
自己去一步一步去深挖，还得借助Google啊（不知道是不适合所有）。

原来MyBatis对于整型类型如果值为0，会当做null来处理。（不知道作者是出于什么原因）

解决办法：

加强判断
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;if test=&quot;categoryName != null and categoryName != &apos;&apos; or categoryName == 0&quot;&gt;</div></pre></td></tr></table></figure>
<h3 id="Spring-MVC的问题"><a href="#Spring-MVC的问题" class="headerlink" title="Spring MVC的问题"></a>Spring MVC的问题</h3><p>spring mvc put方法请求，ajax必须指定dataType: “json”<br>    在设计Restful接口的时候，其中Controller里面的PUT方法，前台html中使用ajax提交表单,很正常不过。<br>    可是在后台始终得不到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$.ajax(</div><div class="line">	&#123;</div><div class="line">	    url: API,</div><div class="line">	    type: &quot;PUT&quot;,</div><div class="line">	    data: &#123;k : v&#125;,</div><div class="line">	    async: false,</div><div class="line">	    success: function (data, textStatus, jqXHR) &#123;</div><div class="line">	        //TODO:</div><div class="line">	    &#125;,</div><div class="line">	    error: function (jqXHR, textStatus, errorThrown) &#123;</div><div class="line">	    	//TODO:</div><div class="line">	    &#125;</div><div class="line">	&#125;);</div></pre></td></tr></table></figure>
<pre><code>抓取request的header，如下：
</code></pre><p><img src="/images/put-method.png" alt=""></p>
<pre><code>给ajax加入如下dataType参数，值为“json”，这样问题解决了，Controller成功的获得了参数。
We did it。
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$.ajax(</div><div class="line">	&#123;</div><div class="line">	    url: API,</div><div class="line">	    type: &quot;PUT&quot;,</div><div class="line">	    data: &#123;k : v&#125;,</div><div class="line">	    dataType: &quot;json&quot;,</div><div class="line">	    async: false,</div><div class="line">	    success: function (data, textStatus, jqXHR) &#123;</div><div class="line">	        //TODO:</div><div class="line">	    &#125;,</div><div class="line">	    error: function (jqXHR, textStatus, errorThrown) &#123;</div><div class="line">	    	//TODO:</div><div class="line">	    &#125;</div><div class="line">	&#125;);</div></pre></td></tr></table></figure>
<pre><code>抓取request的header，如下：
</code></pre><p><img src="/images/put-method-json.png" alt=""></p>
<pre><code>从两处标记可以看出，Accept的两次值不一样；Accept的值直接影响Controller的consumes,
Spring会根据Accept来对Request的参数做相应的处理。
</code></pre><h3 id="XMLHttpRequest-cannot-load-http-yourdomain-com-api-addresses-Response-to-preflight-request-doesn’t-pass-access-control-check-The-‘Access-Control-Allow-Origin’-header-contains-multiple-values-‘http-localhost-8080-’-but-only-one-is-allowed-Origin-‘http-localhost-8080‘-is-therefore-not-allowed-access"><a href="#XMLHttpRequest-cannot-load-http-yourdomain-com-api-addresses-Response-to-preflight-request-doesn’t-pass-access-control-check-The-‘Access-Control-Allow-Origin’-header-contains-multiple-values-‘http-localhost-8080-’-but-only-one-is-allowed-Origin-‘http-localhost-8080‘-is-therefore-not-allowed-access" class="headerlink" title="XMLHttpRequest cannot load http://yourdomain.com/api/addresses. Response to preflight request doesn’t pass access control check: The ‘Access-Control-Allow-Origin’ header contains multiple values ‘http://localhost:8080, *’, but only one is allowed. Origin ‘http://localhost:8080‘ is therefore not allowed access."></a>XMLHttpRequest cannot load <a href="http://yourdomain.com/api/addresses" target="_blank" rel="external">http://yourdomain.com/api/addresses</a>. Response to preflight request doesn’t pass access control check: The ‘Access-Control-Allow-Origin’ header contains multiple values ‘<a href="http://localhost:8080" target="_blank" rel="external">http://localhost:8080</a>, *’, but only one is allowed. Origin ‘<a href="http://localhost:8080" target="_blank" rel="external">http://localhost:8080</a>‘ is therefore not allowed access.</h3><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>还会陆续遇到各种坑，慢慢填吧...
 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;最近也不知道写点啥，工作任务太饱和了，遇到些小问题，做个总结
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="work" scheme="http://www.nealma.com/categories/work/"/>
    
    
      <category term="大杂烩" scheme="http://www.nealma.com/tags/%E5%A4%A7%E6%9D%82%E7%83%A9/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot（九) 微服务发布、部署</title>
    <link href="http://www.nealma.com/2016/11/05/spring-boot-9-package-and-deploy/"/>
    <id>http://www.nealma.com/2016/11/05/spring-boot-9-package-and-deploy/</id>
    <published>2016-11-05T03:46:45.000Z</published>
    <updated>2016-11-26T13:02:38.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>有关部署，我们平时最多的就是package成war，然后放到Tomcat的webappp路径下，
Spring Boot 提供了直接打包成fat-jar或者war的功能，很方便...
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>有关部署，我们平时最多的就是package成war，然后放到Tomcat的webappp路径下，
Spring Boot 提供了直接打包成fat-jar或者war的功能，很方便...
</code></pre><p>开发环境：<br>OS: Mac 10.11.6<br>IDE: IDEA<br>Build: Maven</p>
<h3 id="Web项目，注意"><a href="#Web项目，注意" class="headerlink" title="Web项目，注意"></a>Web项目，注意</h3><pre><code>如果是Web项目，使用的thymeleaf模版，那么你的静态资源和模版文件都是放在了默认的目录，如下：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">src/main/resources</div><div class="line">├── static</div><div class="line">│   ├── favicon.png</div><div class="line">│   └── web</div><div class="line">└── templates</div><div class="line">    ├── error</div><div class="line">    └── web</div></pre></td></tr></table></figure>
<pre><code>很简单，直接如下：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mvn clean package </div><div class="line">java －jar xxx.jar</div></pre></td></tr></table></figure>
<pre><code>如果你变更了静态资源和模版的目录，此时这种方式运行是有问题的，找不到leaf的模版文件。
需要更改默认配置为你现在对应的目录结构，具体如何做，我还没试过，如果你有实践过，
可以回复我，谢谢...
//TODO:
</code></pre><h3 id="传统war，tomcat容器"><a href="#传统war，tomcat容器" class="headerlink" title="传统war，tomcat容器"></a>传统war，tomcat容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#打包成war</div><div class="line">mvn clean package</div><div class="line"></div><div class="line">#删除tomcat_home/webapps下的所有文件</div><div class="line">rm -rf tomcat_home/webapps/*</div><div class="line"></div><div class="line">#把war包copy到tomcat_home/webapps下</div><div class="line">mv project.war tomcat_home/webapps/ROOT.war</div><div class="line"></div><div class="line">sh tomcat_home/bin/startup.sh</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;有关部署，我们平时最多的就是package成war，然后放到Tomcat的webappp路径下，
Spring Boot 提供了直接打包成fat-jar或者war的功能，很方便...
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.nealma.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
      <category term="Deploy" scheme="http://www.nealma.com/tags/Deploy/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot（八) 多环境和logback配置</title>
    <link href="http://www.nealma.com/2016/11/04/spring-boot-8-multiple-environment/"/>
    <id>http://www.nealma.com/2016/11/04/spring-boot-8-multiple-environment/</id>
    <published>2016-11-04T03:46:45.000Z</published>
    <updated>2016-11-17T18:43:49.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>我们在做开发的时候，都是使用本地数据库，本地缓存服务器，也只有我们一个人来开发，
这是我们最最初级的场景，在实际工作中，我们不可能只有一个环境。通常会有Test,Dev,
Live环境，Dev是我们的开发环境，Test作为我们的测试环境，Live是生产环境。每个
环境都有自己的服务器地址和端口，所以后面就是这次要解决的问题了...
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>我们在做开发的时候，都是使用本地数据库，本地缓存服务器，也只有我们一个人来开发，
这是我们最最初级的场景，在实际工作中，我们不可能只有一个环境。通常会有Test,Dev,
Live环境，Dev是我们的开发环境，Test作为我们的测试环境，Live是生产环境。每个
环境都有自己的服务器地址和端口，所以后面就是这次要解决的问题了...
</code></pre><p>开发环境：<br>OS: Mac 10.11.6<br>IDE: IDEA<br>Build: Maven</p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><pre><code>其实都基本相同，多环境无外乎就是把不同的值存放在不同的配置文件中，在编译打包的时候，
根据配置的指令选择对应的配置文件，这里指定的配置文件是要满足一定的格式的，这这里
application-{profile}.properties，profile就是我们刚才定义的dev,test,live。

application-dev.properties 开发
application-test.properties 测试
application-live.properties 生产
</code></pre><h3 id="超级简单"><a href="#超级简单" class="headerlink" title="超级简单"></a>超级简单</h3><ul>
<li>在application.properties文件里加入如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.properties.active=dev</div></pre></td></tr></table></figure>
<p>application-dev.properties内容<br>server.port=8080</p>
<p>application-test.properties内容<br>server.port=8081</p>
<p>application-live.properties内容<br>server.port=8082</p>
<p>执行 mvn spring-boot:run ，这时候你会看到，你的应用端口号是跟spring.properties.active的值一致的</p>
<p>其他的，比如数据host，username，password等都是一样的设置方法。</p>
<h3 id="以logback配置为栗子"><a href="#以logback配置为栗子" class="headerlink" title="以logback配置为栗子"></a>以logback配置为栗子</h3><ul>
<li><p>logback-spring.xml 替换 logback.xml</p>
<p>   Spring Boot 支持特有的属性，也建议使用logback-spring.xml命名</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;configuration&gt;</div><div class="line">    &lt;include resource=&quot;org/springframework/boot/logging/logback/base.xml&quot; /&gt;</div><div class="line">    &lt;springProfile name=&quot;dev,test&quot;&gt;</div><div class="line">        &lt;logger name=&quot;com.yourdomain&quot; level=&quot;DEBUG&quot; additivity=&quot;false&quot;&gt;</div><div class="line">            &lt;appender-ref ref=&quot;CONSOLE&quot; /&gt;</div><div class="line">        &lt;/logger&gt;</div><div class="line">    &lt;/springProfile&gt;</div><div class="line">    &lt;springProfile name=&quot;live&quot;&gt;</div><div class="line">        &lt;logger name=&quot;com.yourdomain&quot; level=&quot;WARN&quot; additivity=&quot;false&quot;&gt;</div><div class="line">            &lt;appender-ref ref=&quot;FILE&quot; /&gt;</div><div class="line">        &lt;/logger&gt;</div><div class="line">    &lt;/springProfile&gt;</div><div class="line">    &lt;logger name=&quot;org.springframework&quot; level=&quot;WARN&quot; additivity=&quot;false&quot;&gt;</div><div class="line">        &lt;appender-ref ref=&quot;FILE&quot; /&gt;</div><div class="line">    &lt;/logger&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<p>执行 mvn spring-boot:run ，这时候你会看到，springProfile name是跟spring.properties.active的值一致的</p>
<h3 id="jar-运行"><a href="#jar-运行" class="headerlink" title="jar 运行"></a>jar 运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java －jar xxx.jar --spring.profiles.active=dev</div></pre></td></tr></table></figure>
<p>这种形式，可以把–后面的值传递给Spring Boot，优先级高于properties配置文件，即会覆盖。</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>今天坐地铁，把这本书献给你们吧！
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;我们在做开发的时候，都是使用本地数据库，本地缓存服务器，也只有我们一个人来开发，
这是我们最最初级的场景，在实际工作中，我们不可能只有一个环境。通常会有Test,Dev,
Live环境，Dev是我们的开发环境，Test作为我们的测试环境，Live是生产环境。每个
环境都有自己的服务器地址和端口，所以后面就是这次要解决的问题了...
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.nealma.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
      <category term="Profile" scheme="http://www.nealma.com/tags/Profile/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot（七) Thymeleaf 模版引擎</title>
    <link href="http://www.nealma.com/2016/11/03/spring-boot-7-thymeleaf/"/>
    <id>http://www.nealma.com/2016/11/03/spring-boot-7-thymeleaf/</id>
    <published>2016-11-03T03:46:45.000Z</published>
    <updated>2016-12-09T17:17:06.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>模版引擎千千万，今个说说Thymeleaf，主要是不想在混用jsp标签和使用jsp后缀文件，
直接使用html文件，便于前后端分离。
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>模版引擎千千万，今个说说Thymeleaf，主要是不想在混用jsp标签和使用jsp后缀文件，
直接使用html文件，便于前后端分离。
</code></pre><p>开发环境：<br>OS: Mac 10.11.6<br>IDE: IDEA<br>Build: Maven</p>
<h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><pre><code>Spring Boot天生内置了对Thymeleaf的支持，简化了配置，加速开发。只需要引入如下
</code></pre> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> &lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre><code>在application.properties文件里加入如下
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#thymeleaf</div><div class="line">#我倾向于放在webapp/WEB-INF的目录下,spring.thymeleaf.prefix=/templates</div><div class="line">spring.thymeleaf.prefix=classpath:/templates/</div><div class="line">spring.thymeleaf.suffix=.html</div><div class="line">spring.thymeleaf.mode=HTML5</div><div class="line">spring.thymeleaf.encoding=UTF-8</div><div class="line">spring.thymeleaf.content-type=text/html</div></pre></td></tr></table></figure>
<pre><code>在src/main/resources/templates/文件夹下，存放你的模版文件,其实在应用启动的时候，
TemplateEngine，ThymeleafViewResolver会自用实例化。
</code></pre><h3 id="空间指定"><a href="#空间指定" class="headerlink" title="空间指定"></a>空间指定</h3><pre><code>没有指定空间，总是飘红，还是加上吧
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;</div><div class="line">      xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div></pre></td></tr></table></figure>
<h3 id="最简用例"><a href="#最简用例" class="headerlink" title="最简用例"></a>最简用例</h3><ul>
<li>Controller</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> *</div><div class="line"> * 商品信息</div><div class="line"> */</div><div class="line">@RestController</div><div class="line">public class GoodsPageController extends BaseController &#123;</div><div class="line">    /**</div><div class="line">     * 商品列表</div><div class="line">     */</div><div class="line">    @RequestMapping(value = &#123;&quot;/goods/list&quot;&#125;, method = RequestMethod.GET)</div><div class="line">    @PermitAll</div><div class="line">    public ModelAndView list(Model model) &#123;</div><div class="line">        LOGGER.info(&quot;|--&gt; &#123;&#125;&quot;, this.getRequest().getRequestURI());</div><div class="line">        model.addAttribute(&quot;name&quot;, &quot;neal&quot;);</div><div class="line">        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();</div><div class="line">        map.put(&quot;id&quot;, 1);</div><div class="line">        map.put(&quot;title&quot;, &quot;小怪兽来了&quot;);</div><div class="line">        Map&lt;String, Object&gt; map1 = new HashMap&lt;&gt;();</div><div class="line">        map1.put(&quot;id&quot;, 2);</div><div class="line">        map1.put(&quot;title&quot;, &quot;小怪兽来了&quot;);</div><div class="line">        model.addAttribute(&quot;list&quot;, Arrays.asList(new Object[]&#123;map,map1&#125;));</div><div class="line">        return new ModelAndView(&quot;/index&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>创建src/main/resources/templates/index.html</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;</div><div class="line">      xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;/&gt;</div><div class="line">    &lt;title&gt;Thymeleaf Mini Demo&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">Hello, &lt;b th:text=&quot;$&#123;name&#125;&quot;&gt;Name&lt;/b&gt;</div><div class="line">&lt;div th:each=&quot;item:$&#123;list&#125;&quot;&gt;</div><div class="line">    &lt;b th:text=&quot;$&#123;item.id&#125;&quot;&gt;ID&lt;/b&gt;</div><div class="line">    &lt;b th:text=&quot;$&#123;item.title&#125;&quot;&gt;Title&lt;/b&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>使用过程中，发现thymeleaf对于html的语法要求的很严格，每个标签都要有结束tag。我的一个页面
&lt;link &gt; &lt;img&gt; 没有&quot;/&quot;,导致报错；还有就是属性必须是&quot;=&quot;,即key=value, 在input中我使用了disable,结果报错了
于是改成disable=&quot;disable&quot;.
</code></pre><h3 id="更新日志-1"><a href="#更新日志-1" class="headerlink" title="更新日志 1"></a>更新日志 1</h3><pre><code>有的时候，老项目移植到新项目的时候，好多都不是严格的html，一个一个盖起来，费时又费力，当然如果有时间，
还是建议使用严格格式。现在有一个偷懒的方法，就是做如下修改：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#非严格标准</div><div class="line">spring.thymeleaf.mode=LEGACYHTML5</div></pre></td></tr></table></figure>
<pre><code>除了这个，还需要额外的增加依赖
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 非标准HTML5 --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;net.sourceforge.nekohtml&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;nekohtml&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.9.22&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h3 id="更新日志-2"><a href="#更新日志-2" class="headerlink" title="更新日志 2"></a>更新日志 2</h3><pre><code>thymeleaf的默认静态资源结构, static作为默认静态资源的根路径
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">src/main/resources</div><div class="line">├── static</div><div class="line">│   ├── favicon.png</div><div class="line">│   └── web</div><div class="line">└── templates</div><div class="line">    ├── error</div><div class="line">    └── web</div></pre></td></tr></table></figure>
<h3 id="更新日志-3"><a href="#更新日志-3" class="headerlink" title="更新日志 3"></a>更新日志 3</h3><pre><code>thymeleaf的基本使用，按照工作中使用情况，随记
</code></pre><ul>
<li><p>变量</p>
<p>  服务器端直接传递对象</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Server :</div><div class="line">   Entity e = new Entity();</div><div class="line">   model.addAttribute(&quot;entity&quot;, e);</div><div class="line"></div><div class="line">Client :</div><div class="line"></div><div class="line">    &lt;tag th:text=&quot;$&#123;entity.filed&#125;&quot;&gt;&lt;/tag&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p>if, each语句和自定义属性th:attr</p>
<p>  activities为服务端传过来的集合对象</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;div th:each=&quot;activityItem, activityStat : $&#123;activities&#125;&quot; th:remove=&quot;tag&quot;&gt;</div><div class="line">    &lt;div class=&quot;index_ad&quot; th:if=&quot;$&#123;activityItem.activityType == 1&#125;&quot;&gt;</div><div class="line">        &lt;a th:href=&quot;$&#123;activityItemactivityUrl&#125;&quot;&gt;</div><div class="line">            &lt;img th:src=&quot;$&#123;activityItem.activityImageUrl&#125;&quot;&gt;</div><div class="line">        &lt;/a&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">#或者</div><div class="line"></div><div class="line">&lt;dl&gt;</div><div class="line">    &lt;div th:each=&quot;attribute : $&#123; attributes &#125;&quot; th:remove=&quot;tag&quot;&gt;</div><div class="line">        &lt;dd th:if=&quot;$&#123;attribute.attrName eq attributeName&#125;&quot; th:attr=&quot;goodsattrlinkid=$&#123;attribute.id&#125;&quot; th:text=&quot;$&#123;attribute.attrValue&#125;&quot;&gt;黑色&lt;/dd&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/dl&gt;</div></pre></td></tr></table></figure>
<ul>
<li>作为html渲染，非text</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Server:</div><div class="line"></div><div class="line">    String n = &quot;&lt;p&gt;&lt;img src=&apos;1.jpg&apos;&gt;&quot;;</div><div class="line">    model.addAttribute(&quot;n&quot;, n);</div><div class="line"></div><div class="line">client:</div><div class="line"></div><div class="line">    &lt;div th:remove=&quot;tag&quot; th:utext=&quot;$&#123;n&#125;&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<h3 id="在javascript中使用服务端传过来的参数-两种方式："><a href="#在javascript中使用服务端传过来的参数-两种方式：" class="headerlink" title="在javascript中使用服务端传过来的参数,两种方式："></a>在javascript中使用服务端传过来的参数,两种方式：</h3><ul>
<li>隐藏域，在html中预埋相应的input标签，javascript中使用jquery选择器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">HTML:</div><div class="line">    &lt;input id=&quot;goodsScreenPrice&quot; th:value=&quot;$&#123;goods.goodsScreenPrice&#125;&quot; type=&quot;number&quot;/&gt;</div><div class="line"></div><div class="line">JAVASCRIPT:</div><div class="line">    $(&apos;#goodsScreenPrice&apos;).val()</div></pre></td></tr></table></figure>
<ul>
<li>th:inline,直接使用</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script th:inline=&quot;javascript&quot;&gt;</div><div class="line">    /*&lt;![CDATA[*/</div><div class="line">    goodsCategoryIdChecked = [[$&#123;goods.categoryId&#125;]];</div><div class="line">    goodsDetailChecked = [[$&#123;goods.goodsDetail&#125;]];</div><div class="line">    /*]]&gt;*/</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;模版引擎千千万，今个说说Thymeleaf，主要是不想在混用jsp标签和使用jsp后缀文件，
直接使用html文件，便于前后端分离。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.nealma.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
      <category term="Template" scheme="http://www.nealma.com/tags/Template/"/>
    
      <category term="Thymeleaf" scheme="http://www.nealma.com/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot（六) Spring Session 分布式会话管理</title>
    <link href="http://www.nealma.com/2016/11/01/spring-boot-6-spring-session/"/>
    <id>http://www.nealma.com/2016/11/01/spring-boot-6-spring-session/</id>
    <published>2016-11-01T03:46:45.000Z</published>
    <updated>2016-11-17T01:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>使用Spring Security的时候，觉得省了好多的事情。但是它使用的是内存来存储CurrentUser的信息
和登录凭证，一旦单机不能承受大用户量，就需要水平扩展，就会涉及到session的问题。怎么才能实现
平滑扩展呢？还好有Sping Session，怎么用呢？
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>使用Spring Security的时候，觉得省了好多的事情。但是它使用的是内存来存储CurrentUser的信息
和登录凭证，一旦单机不能承受大用户量，就需要水平扩展，就会涉及到session的问题。怎么才能实现
平滑扩展呢？还好有Sping Session，怎么用呢？
</code></pre><p>开发环境：<br>OS: Mac 10.11.6<br>IDE: IDEA<br>Build: Maven</p>
<h3 id="Spring-Session-是什么"><a href="#Spring-Session-是什么" class="headerlink" title="Spring Session 是什么"></a>Spring Session 是什么</h3><pre><code>其实也不是什么新鲜的事儿？我们在实现用户登录，授权的时候，最初是web场景，我们只需要在Cookies中
操作即可，现在我们面临移动端、open API等多种场景，单纯的Cookies已经不满足或者不能优雅的体现Restful
风格，此时需要在Header上动手脚，也就是把原来存放在Cookies中的信息移到了Header中，换汤不换药
</code></pre><h3 id="在Web中使用CookieHttpSessionStrategy"><a href="#在Web中使用CookieHttpSessionStrategy" class="headerlink" title="在Web中使用CookieHttpSessionStrategy"></a>在Web中使用CookieHttpSessionStrategy</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> HttpSessionStrategy <span class="title">httpSessionStrategy</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> CookieHttpSessionStrategy();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="在Header中使用HeaderHttpSessionStrategy"><a href="#在Header中使用HeaderHttpSessionStrategy" class="headerlink" title="在Header中使用HeaderHttpSessionStrategy"></a>在Header中使用HeaderHttpSessionStrategy</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> HttpSessionStrategy <span class="title">httpSessionStrategy</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> HeaderHttpSessionStrategy();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Session-外部存储"><a href="#Session-外部存储" class="headerlink" title="Session 外部存储"></a>Session 外部存储</h3><pre><code>单纯的把Session信息存在JVM内容已经不适合现在的技术架构，再加上外部存储的开源产品足够成熟(Redis等)，
于是Sping Session对HttpSession进行了重新包装，使其很容易结合Redis等开源产品，节省了我们的开发时间。
只需要在你自己实现的WebSecurityConfigurerAdapter中加上如下注解：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@EnableRedisHttpSession</div></pre></td></tr></table></figure>
<h3 id="Cookies和Header混合支持"><a href="#Cookies和Header混合支持" class="headerlink" title="Cookies和Header混合支持"></a>Cookies和Header混合支持</h3><pre><code>但是在使用的过程中遇到一个问题，需要Cookie和Header都支持，这下麻烦了，还需要自己去实现，
怎么才能都支持呢？那就是在自己实现的AllHttpSessionStrategy中，对Request进行判断，如果是html，就使用
CookieHttpSessionStrategy，如果是API就用HeaderHttpSessionStrategy，具体如下：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Bean</div><div class="line">  public HttpSessionStrategy httpSessionStrategy() &#123;</div><div class="line">      return new MyHttpSessionStrategy(new HeaderContentNegotiationStrategy());</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>这里的MyHttpSessionStrategy是要自己实现的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">public class MyHttpSessionStrategy implements HttpSessionStrategy &#123;</div><div class="line">    private HttpSessionStrategy browser;</div><div class="line"></div><div class="line">    private HttpSessionStrategy api;</div><div class="line"></div><div class="line">    private RequestMatcher browserMatcher;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    public MyHttpSessionStrategy(ContentNegotiationStrategy contentNegotiationStrategy) &#123;</div><div class="line">        this(new CookieHttpSessionStrategy(), new HeaderHttpSessionStrategy());</div><div class="line">        MediaTypeRequestMatcher matcher = new MediaTypeRequestMatcher(contentNegotiationStrategy,</div><div class="line">                Arrays.asList(MediaType.TEXT_HTML));</div><div class="line">        matcher.setIgnoredMediaTypes(Collections.singleton(MediaType.ALL));</div><div class="line"></div><div class="line">        RequestHeaderRequestMatcher javascript = new RequestHeaderRequestMatcher(&quot;X-Requested-With&quot;);</div><div class="line"></div><div class="line">        this.browserMatcher = new OrRequestMatcher(Arrays.asList(matcher, javascript));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyHttpSessionStrategy(HttpSessionStrategy browser, HttpSessionStrategy api) &#123;</div><div class="line">        this.browser = browser;</div><div class="line">        this.api = api;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public String getRequestedSessionId(HttpServletRequest request) &#123;</div><div class="line">        return getStrategy(request).getRequestedSessionId(request);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onNewSession(Session session, HttpServletRequest request, HttpServletResponse response) &#123;</div><div class="line">        getStrategy(request).onNewSession(session, request, response);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onInvalidateSession(HttpServletRequest request, HttpServletResponse response) &#123;</div><div class="line">        getStrategy(request).onInvalidateSession(request, response);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private HttpSessionStrategy getStrategy(HttpServletRequest request) &#123;</div><div class="line">        return this.browserMatcher.matches(request) ? this.browser : this.api;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>这样无论是网页端还是RESTFull API，都可以正常支持了。
网页端通过cookie来传递session，API使用的是x-auth-token。
这里有个问题就是还不知道怎么去更新Redis中会话信息,待续...
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;使用Spring Security的时候，觉得省了好多的事情。但是它使用的是内存来存储CurrentUser的信息
和登录凭证，一旦单机不能承受大用户量，就需要水平扩展，就会涉及到session的问题。怎么才能实现
平滑扩展呢？还好有Sping Session，怎么用呢？
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.nealma.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
      <category term="Exception" scheme="http://www.nealma.com/tags/Exception/"/>
    
  </entry>
  
  <entry>
    <title>Vim Commandline (一) 文本替换</title>
    <link href="http://www.nealma.com/2016/10/02/vim-command-line-1-replace/"/>
    <id>http://www.nealma.com/2016/10/02/vim-command-line-1-replace/</id>
    <published>2016-10-02T03:46:45.000Z</published>
    <updated>2016-11-17T01:54:55.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>文本替换在我们的工作中经常被使用，是一个高频的功能。
可是我总是记不住，每次都得Google一下，还是自己记录下吧...
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>文本替换在我们的工作中经常被使用，是一个高频的功能。
可是我总是记不住，每次都得Google一下，还是自己记录下吧...
</code></pre><h3 id="Replace-Text"><a href="#Replace-Text" class="headerlink" title="Replace Text"></a>Replace Text</h3><ul>
<li>替换当前行第一个字符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 将当前光标所在的行中，第一个出现的a替换成b</div><div class="line">:$s/a/b</div></pre></td></tr></table></figure>
<ul>
<li>替换前光标所在的行所有字符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 将当前光标所在的行中，所有a替换成b</div><div class="line">:$s/a/b/g</div></pre></td></tr></table></figure>
<ul>
<li>替换第n行到当前行区间中所有行的第一个字符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 将第n行到当前光标所在的行中，第一个出现的a替换成b</div><div class="line">#n 为行号</div><div class="line">:n,$s/a/b</div></pre></td></tr></table></figure>
<ul>
<li>替换前光标所在的行所有字符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 将第n行到当前光标所在的行中，所有a替换成b</div><div class="line">:n,$s/a/b/g</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>:)~</p>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;文本替换在我们的工作中经常被使用，是一个高频的功能。
可是我总是记不住，每次都得Google一下，还是自己记录下吧...
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.nealma.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
      <category term="Vim" scheme="http://www.nealma.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7（六）Let&#39;s Encrypt</title>
    <link href="http://www.nealma.com/2016/10/01/centos-72-6-lentsencrypt/"/>
    <id>http://www.nealma.com/2016/10/01/centos-72-6-lentsencrypt/</id>
    <published>2016-10-01T03:46:49.000Z</published>
    <updated>2017-04-06T23:51:04.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>HTTPS即将普及，各大互联网公司早已实现全面HTTPS化，但是证书的价格对于个人或者初创企业都是支出，
Let&apos;s Encrypt给我们带来了免费的午餐，而且是各大顶级组织在背后支持，没理由不用。
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>HTTPS即将普及，各大互联网公司早已实现全面HTTPS化，但是证书的价格对于个人或者初创企业都是支出，
Let&apos;s Encrypt给我们带来了免费的午餐，而且是各大顶级组织在背后支持，没理由不用。
</code></pre><h3 id="Install-the-Certbot-Let’s-Encrypt-Client"><a href="#Install-the-Certbot-Let’s-Encrypt-Client" class="headerlink" title="Install the Certbot Let’s Encrypt Client"></a>Install the Certbot Let’s Encrypt Client</h3><ul>
<li><p>EPEL repository</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install epel-release -y</div></pre></td></tr></table></figure>
</li>
<li><p>Certbot package</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install certbot -y</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Nginx-Config"><a href="#Nginx-Config" class="headerlink" title="Nginx Config"></a>Nginx Config</h3><ul>
<li>nginx.conf<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">user nginx;</div><div class="line">worker_processes auto;</div><div class="line">error_log /var/log/nginx/error.log;</div><div class="line">pid /run/nginx.pid;</div><div class="line"></div><div class="line">include /usr/share/nginx/modules/*.conf;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections 1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class="line"></div><div class="line">    access_log  /var/log/nginx/access.log  main;</div><div class="line"></div><div class="line">    sendfile            on;</div><div class="line">    tcp_nopush          on;</div><div class="line">    tcp_nodelay         on;</div><div class="line">    keepalive_timeout   65;</div><div class="line">    types_hash_max_size 2048;</div><div class="line"></div><div class="line">    include             /etc/nginx/mime.types;</div><div class="line">    default_type        application/octet-stream;</div><div class="line"></div><div class="line">    add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;</div><div class="line">    add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;;</div><div class="line">    add_header &apos;Access-Control-Allow-Headers&apos; &apos;Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With&apos;;</div><div class="line">    add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET,POST,OPTIONS&apos;;</div><div class="line"></div><div class="line">    include /etc/nginx/conf.d/*.conf;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">* ../conf.d/www.conf</div></pre></td></tr></table></figure>
</li>
</ul>
<p>upstream xxx.com {<br>    server 127.0.0.1:8081;<br>}</p>
<p>server {<br>    listen       80 default_server;<br>    listen       [::]:80 default_server;</p>
<pre><code>#$DOMAINS中的所有域名，一定要做好CNAME或者A记录
server_name  xxx.com www.xxx.com admin.xxx.com m.xxx.com;
root        /usr/share/nginx/html;

location ~ /\.well-known\/acme-challenge {
    allow all;
}

location / {

}

error_page 404 /404.html;
location = /40x.html {

}

error_page 500 502 503 504 /50x.html;
    location = /50x.html {
}
</code></pre><p>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* ../conf.d/ssl.www.conf</div></pre></td></tr></table></figure></p>
<p>upstream ssl.xxx.com {<br>    server 127.0.0.1:8081;<br>}</p>
<p>server {<br>    listen       443 ssl http2 default_server;<br>    listen       [::]:443 ssl http2 default_server;<br>    server_name  maylingyi.com www.ruitaowang.com haiji.ruitaowang.com;<br>    root         /usr/share/nginx/html;</p>
<pre><code># 创建证书之前先注释一下三行
ssl_certificate /etc/letsencrypt/live/ruitaowang.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/ruitaowang.com/privkey.pem;
ssl_trusted_certificate /etc/letsencrypt/live/ruitaowang.com/chain.pem;

ssl_session_cache shared:SSL:1m;
ssl_session_timeout  10m;
ssl_ciphers HIGH:!aNULL:!MD5;
ssl_prefer_server_ciphers on;

location / {

}

error_page 404 /404.html;
    location = /40x.html {
}

error_page 500 502 503 504 /50x.html;
    location = /50x.html {
}
</code></pre><p>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">### Obtain a Certificate</div></pre></td></tr></table></figure></p>
<p>export DOMAINS=”ruitaowang.com,www.ruitaowang.com,test.ruitaowang.com,admin.ruitaowang.com,api.ruitaowang.com,m.ruitaowang.com,statics.ruitaowang.com,search.ruitaowang.com,web.ruitaowang.com,live.ruitaowang.com”<br>export DIR=/usr/share/nginx/letsencrypt<br>sudo certbot certonly -a webroot –webroot-path=$DIR -d $DOMAINS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#### 续期</div></pre></td></tr></table></figure></p>
<p>certbot renew –force-renew<br>nginx -s reload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### aliyun负载均衡数字证书配置</div><div class="line">    在给阿里云配置负载均衡的HTTPs的数字证书时，要注意</div><div class="line">* 密钥 cat /etc/letsencrypt/live/xxx.com/privkey.pem，BEGIN后面紧跟RSA，否则检测错误</div></pre></td></tr></table></figure></p>
<p>—–BEGIN PRIVATE KEY—–</p>
<p>…</p>
<p>—–END PRIVATE KEY—–<br>```</p>
<ul>
<li>证书内容 cat /etc/letsencrypt/live/xxx.com/fullchain.pem，复制全部内容，否则授权unknown</li>
</ul>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>还会陆续遇到各种坑，慢慢填吧...
 :)~
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;HTTPS即将普及，各大互联网公司早已实现全面HTTPS化，但是证书的价格对于个人或者初创企业都是支出，
Let&amp;apos;s Encrypt给我们带来了免费的午餐，而且是各大顶级组织在背后支持，没理由不用。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.nealma.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
      <category term="Let&#39;s Encrypt" scheme="http://www.nealma.com/tags/Let-s-Encrypt/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7（四）Install Redis</title>
    <link href="http://www.nealma.com/2016/10/01/centos-72-4-redis/"/>
    <id>http://www.nealma.com/2016/10/01/centos-72-4-redis/</id>
    <published>2016-10-01T03:46:48.000Z</published>
    <updated>2017-03-26T10:22:36.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>今天在CentOS 7.2上安装Redis,记录一下
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>今天在CentOS 7.2上安装Redis,记录一下
</code></pre><h3 id="Install-Redis"><a href="#Install-Redis" class="headerlink" title="Install Redis"></a>Install Redis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install -y redis</div><div class="line"></div><div class="line">#For Mac</div><div class="line">brew install redis</div></pre></td></tr></table></figure>
<p>so easy!</p>
<h3 id="Start-Redis"><a href="#Start-Redis" class="headerlink" title="Start Redis"></a>Start Redis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">service redis start/stop/status/restart</div><div class="line"></div><div class="line"># For Mac</div><div class="line">brew services list</div><div class="line">brew services start/stop/restart redis</div></pre></td></tr></table></figure>
<h3 id="服务器解除bind-允许远程访问"><a href="#服务器解除bind-允许远程访问" class="headerlink" title="服务器解除bind, 允许远程访问"></a>服务器解除bind, 允许远程访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#vim /etc/redis.conf</div><div class="line">#注释掉这一行</div><div class="line">bind 127.0.0.1</div><div class="line"></div><div class="line"># change password on MAC</div></pre></td></tr></table></figure>
<p>/usr/local/etc/redis.conf </p>
<p> brew services restart redis<br>```</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>:)~</p>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;今天在CentOS 7.2上安装Redis,记录一下
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.nealma.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
      <category term="Redis" scheme="http://www.nealma.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7（三）Install PHP</title>
    <link href="http://www.nealma.com/2016/10/01/centos-72-3-php/"/>
    <id>http://www.nealma.com/2016/10/01/centos-72-3-php/</id>
    <published>2016-10-01T03:46:47.000Z</published>
    <updated>2016-12-27T22:31:33.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>今天在CentOS 7.2上安装PHP,记录一下
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>今天在CentOS 7.2上安装PHP,记录一下
</code></pre><h3 id="Install-PHP"><a href="#Install-PHP" class="headerlink" title="Install PHP"></a>Install PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php php-mysql</div></pre></td></tr></table></figure>
<h3 id="Restart-Apache-web-server"><a href="#Restart-Apache-web-server" class="headerlink" title="Restart Apache web server"></a>Restart Apache web server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum -y install httpd</div><div class="line"></div><div class="line">systemctl restart httpd.service</div></pre></td></tr></table></figure>
<h3 id="Install-PHP-Modules"><a href="#Install-PHP-Modules" class="headerlink" title="Install PHP Modules"></a>Install PHP Modules</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php-fpm</div></pre></td></tr></table></figure>
<h3 id="Test-php"><a href="#Test-php" class="headerlink" title="Test php"></a>Test php</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vim /var/www/html/info.php</div><div class="line"></div><div class="line">#文件内容</div><div class="line">&lt;?php phpinfo(); ?&gt;</div></pre></td></tr></table></figure>
<h3 id="如果开启了firewall，请允许HTTP和HTTPS-Traffic"><a href="#如果开启了firewall，请允许HTTP和HTTPS-Traffic" class="headerlink" title="如果开启了firewall，请允许HTTP和HTTPS Traffic"></a>如果开启了firewall，请允许HTTP和HTTPS Traffic</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public --add-service=http </div><div class="line">firewall-cmd --permanent --zone=public --add-service=https</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<h3 id="Install-phpMyAdmin"><a href="#Install-phpMyAdmin" class="headerlink" title="Install phpMyAdmin"></a>Install phpMyAdmin</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y update</div><div class="line">yum -y install phpmyadmin</div></pre></td></tr></table></figure>
<h3 id="安装完后，发现还是5-x-x，还得继续，升级到7-x"><a href="#安装完后，发现还是5-x-x，还得继续，升级到7-x" class="headerlink" title="安装完后，发现还是5.x.x，还得继续，升级到7.x"></a>安装完后，发现还是5.x.x，还得继续，升级到7.x</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</div><div class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</div><div class="line"></div><div class="line">yum install php70w php70w-opcache</div><div class="line"></div><div class="line">yum install yum-plugin-replace</div><div class="line"></div><div class="line">yum replace php-common --replace-with=php70w-common -y</div><div class="line"></div><div class="line">yum install php70w-opcache -y</div></pre></td></tr></table></figure>
<h3 id="安装ecshop-检查结果，文件不可写"><a href="#安装ecshop-检查结果，文件不可写" class="headerlink" title="安装ecshop,检查结果，文件不可写"></a>安装ecshop,检查结果，文件不可写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod -R 777 /var/www/html/ecshop/</div></pre></td></tr></table></figure>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install mysql mysql-server mysql-devel php-mysql gd gd-devel httpd php php-gd</div></pre></td></tr></table></figure>
<h3 id="如果想删除php，更换版本，如下："><a href="#如果想删除php，更换版本，如下：" class="headerlink" title="如果想删除php，更换版本，如下："></a>如果想删除php，更换版本，如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"># remove</div><div class="line">yum remove php</div><div class="line">yum remove php-fpm</div><div class="line"></div><div class="line">php -v</div><div class="line">#if exists php, then</div><div class="line">rpm -qa | grep php</div><div class="line"></div><div class="line">[xxx]# rpm -qa | grep php</div><div class="line">php70-runtime-1.0-5.el7.remi.x86_64</div><div class="line">php-pdo-5.4.16-36.3.el7_2.x86_64</div><div class="line">php-gd-5.4.16-36.3.el7_2.x86_64</div><div class="line">php-common-5.4.16-36.3.el7_2.x86_64</div><div class="line">php-mysql-5.4.16-36.3.el7_2.x86_64</div><div class="line">php-cli-5.4.16-36.3.el7_2.x86_64</div><div class="line"></div><div class="line">#erase </div><div class="line">rpm -qa | grep php | xargs rpm -e</div><div class="line"></div><div class="line"></div><div class="line">＃ search</div><div class="line">yum search php</div><div class="line"></div><div class="line"># remove common</div><div class="line">yum remove php-commen(以search的结果为准)</div></pre></td></tr></table></figure>
<h3 id="fast-cgi-运行"><a href="#fast-cgi-运行" class="headerlink" title="fast-cgi 运行"></a>fast-cgi 运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">php-cgi -b 9001</div><div class="line"></div><div class="line">### darmon start</div><div class="line">php-fpm -D -c /etc/php.ini </div><div class="line"></div><div class="line">#如果没有php-fpm, 先安装</div><div class="line">yum install php-fpm -y</div><div class="line">``` </div><div class="line"></div><div class="line">### nginx 配置</div></pre></td></tr></table></figure>
<p>location  ~ ^(.+.php)(.<em>)$ {<br>    fastcgi_pass 127.0.0.1:9000;<br>    fastcgi_index index.php;<br>    fastcgi_split_path_info ^(.+.php)(.</em>)$; fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;<br>    fastcgi_param   PATH_INFO $fastcgi_path_info;<br>    fastcgi_param   PATH_TRANSLATED $document_root$fastcgi_path_info;<br>    include fastcgi_params;<br>}<br>```</p>
<p>注意要把你的php项目cp到nginx的html下</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>:)~</p>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;今天在CentOS 7.2上安装PHP,记录一下
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.nealma.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
      <category term="PHP" scheme="http://www.nealma.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7（二）Install MySQL (MariaDB)</title>
    <link href="http://www.nealma.com/2016/10/01/centos-72-2-install-mariadb/"/>
    <id>http://www.nealma.com/2016/10/01/centos-72-2-install-mariadb/</id>
    <published>2016-10-01T03:46:46.000Z</published>
    <updated>2017-03-26T10:24:19.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>今天在CentOS 7.2上安装MySQL（MariaDB）,记录一下
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>今天在CentOS 7.2上安装MySQL（MariaDB）,记录一下
</code></pre><h3 id="Install-MariaDB"><a href="#Install-MariaDB" class="headerlink" title="Install MariaDB"></a>Install MariaDB</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mariadb-server mariadb</div></pre></td></tr></table></figure>
<h3 id="Start-MariaDB"><a href="#Start-MariaDB" class="headerlink" title="Start MariaDB"></a>Start MariaDB</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemsctl start mariadb</div></pre></td></tr></table></figure>
<p>###更换data目录<br>通常数据库需要额外的磁盘，这个时候会遇到目录权限的问题，需要给目录授予权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chown -R mysql:mysql /mnt/mysql</div><div class="line">chmod 640 /mnt/mysql</div><div class="line">chmod +x /mnt/mysql</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[mysqld]</div><div class="line">datadir=/mnt/mysql</div><div class="line">socket=/mnt/mysql/mysql.sock</div><div class="line">user=mysql</div><div class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</div><div class="line">symbolic-links=0</div><div class="line"># Settings user and group are ignored when systemd is used.</div><div class="line"># If you need to run mysqld under a different user or group,</div><div class="line"># customize your systemd unit file for mariadb according to the</div><div class="line"># instructions in http://fedoraproject.org/wiki/Systemd</div><div class="line"></div><div class="line">[mysqld_safe]</div><div class="line">log-error=/mnt/mysql/log/mariadb/mariadb.log</div><div class="line">pid-file=/mnt/mysql/mariadb/mariadb.pid</div><div class="line"></div><div class="line">#</div><div class="line"># include all files from the config directory</div><div class="line">#</div><div class="line">!includedir /etc/my.cnf.d</div></pre></td></tr></table></figure>
<h3 id="Setting-Secure"><a href="#Setting-Secure" class="headerlink" title="Setting Secure"></a>Setting Secure</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">### 可能会出现找不到mysql.sock问题</div></pre></td></tr></table></figure>
<p>$ sudo ln -s /mnt/mysql/mysql.sock /var/lib/mysql/mysql.sock</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"># 设置root密码，是否允许远程，test数据库等	</div><div class="line"></div><div class="line">mysql_secure_installation</div><div class="line"></div><div class="line"># Or</div><div class="line"></div><div class="line">set password for &apos;root&apos;@&apos;localhost&apos; =password(&apos;password&apos;);</div><div class="line"></div><div class="line"># 远程连接设置</div><div class="line">grant all privileges on &apos;rtshop&apos;.* to fuckyou@&apos;%&apos; identified by &apos;******&apos;;</div><div class="line">flush privileges;</div><div class="line"></div><div class="line"># 通过以上方式，对于用户root的localhost情况，可能出现如下异常</div><div class="line"># java.sql.SQLException: Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</div><div class="line"># 解决办法</div><div class="line">use mysql;</div><div class="line">UPDATE user SET Password=PASSWORD(&apos;******&apos;) where USER=&apos;root&apos;;</div><div class="line">flush privileges;</div><div class="line"></div><div class="line">#Or</div><div class="line"></div><div class="line">mysql&gt; use mysql</div><div class="line"></div><div class="line">mysql&gt; update user set Host=&apos;%&apos; where User=&apos;root&apos;;</div><div class="line"></div><div class="line">mysql&gt; flush privileges;</div><div class="line"></div><div class="line"># 创建新用户</div><div class="line">create user &apos;fuckyou&apos;@&apos;10.%.%.%&apos; identified by &apos;******&apos;;</div></pre></td></tr></table></figure>
<h3 id="Start-on-boot"><a href="#Start-on-boot" class="headerlink" title="Start on boot"></a>Start on boot</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl enable mariadb.service</div></pre></td></tr></table></figure>
<h3 id="MySQL-配置防火墙"><a href="#MySQL-配置防火墙" class="headerlink" title="MySQL 配置防火墙"></a>MySQL 配置防火墙</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --zone=public --add-service=mysql</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<p>###<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Cannot load from mysql.proc. The table is probably corrupted。</div><div class="line"></div><div class="line">在命令行中执行mysql_upgrade -uroot -p 即可~</div></pre></td></tr></table></figure></p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>:)~</p>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;今天在CentOS 7.2上安装MySQL（MariaDB）,记录一下
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.nealma.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
      <category term="MySQL" scheme="http://www.nealma.com/tags/MySQL/"/>
    
      <category term="MariaDB" scheme="http://www.nealma.com/tags/MariaDB/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7（一）Java环境搭建</title>
    <link href="http://www.nealma.com/2016/10/01/centos-72-1-install-java-envirment/"/>
    <id>http://www.nealma.com/2016/10/01/centos-72-1-install-java-envirment/</id>
    <published>2016-10-01T03:46:45.000Z</published>
    <updated>2016-12-28T03:23:21.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>最近要从0开发新项目，以前都是用的CengOS6.5,觉得太历史了，7.x已经出来很久了。
而且云上的景象都是7.2了，没理由不用。第一次使用肯定会遇到坑，其实也是自身对这个系统的不了解。
尝鲜可定会出事，但是只要你打破舒适区，一路下来，你会觉得没那么难
</code></pre><a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>最近要从0开发新项目，以前都是用的CengOS6.5,觉得太历史了，7.x已经出来很久了。
而且云上的景象都是7.2了，没理由不用。第一次使用肯定会遇到坑，其实也是自身对这个系统的不了解。
尝鲜可定会出事，但是只要你打破舒适区，一路下来，你会觉得没那么难
</code></pre><h3 id="安装-JDK8-0"><a href="#安装-JDK8-0" class="headerlink" title="安装 JDK8.0"></a>安装 JDK8.0</h3><p>直接使用openJDK,直接使用8.0,没必要考虑之前的版本了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum search openJDK</div><div class="line">yum install java-1.8.0-openjdk.x86_64</div></pre></td></tr></table></figure>
<h3 id="安装-Maven"><a href="#安装-Maven" class="headerlink" title="安装 Maven"></a>安装 Maven</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">＃ 去官网下载最新的Maven版本，zip包就行了</div><div class="line">wget http://mirror.bit.edu.cn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip</div><div class="line"></div><div class="line">unzip apache-maven-3.3.9-bin.zip</div><div class="line"></div><div class="line"># 如果没有unzip工具的，先安装unzip</div><div class="line">yum install unzip</div><div class="line"></div><div class="line">＃ 把解压文件夹移动到/opt/maven下</div><div class="line">mv apache-maven-3.3.9 /opt/maven</div><div class="line"></div><div class="line"># 做个软连接</div><div class="line">ln -s /opt/maven/bin/mvn /usr/bin/mvn</div><div class="line"></div><div class="line">＃设置Maven环境变量</div><div class="line">vim /etc/profile.d/maven.sh</div><div class="line"></div><div class="line">#!/bin/bash</div><div class="line">MAVEN_HOME=/opt/maven</div><div class="line">PATH=$MAVEN_HOME/bin:$PATH</div><div class="line">export PATH MAVEN_HOME</div><div class="line">export CLASSPATH=.</div><div class="line"></div><div class="line"># 添加可执行权限</div><div class="line">chmod +x /etc/profile.d/maven.sh</div><div class="line"></div><div class="line"># 立即生效</div><div class="line">source /etc/profile.d/maven.sh</div><div class="line"></div><div class="line"># 检查是否安装成功</div><div class="line">mvn -version</div></pre></td></tr></table></figure>
<h3 id="安装-Tomcat-8"><a href="#安装-Tomcat-8" class="headerlink" title="安装 Tomcat 8"></a>安装 Tomcat 8</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">＃ download</div><div class="line">wget http://mirrors.cnnic.cn/apache/tomcat/tomcat-8/v8.5.6/bin/apache-tomcat-8.5.6.zip</div><div class="line"></div><div class="line">＃ extract</div><div class="line">unzip apache-tomcat-8.5.6.zip </div><div class="line"></div><div class="line"># move to /opt</div><div class="line">mv apache-tomcat-8.5.6 /opt/tomcat</div><div class="line"></div><div class="line"># set enviroment </div><div class="line">vim /etc/profile.d/tomcat.sh</div><div class="line"></div><div class="line">#!/bin/bash</div><div class="line">CATALINA_HOME=/opt/tomcat</div><div class="line">PATH=$CATALINA_HOME/bin:$PATH</div><div class="line">export PATH CATALINA_HOME</div><div class="line">export CLASSPATH=.</div><div class="line"></div><div class="line"># make it executable</div><div class="line">chmod +x /etc/profile.d/tomcat.sh</div><div class="line"></div><div class="line"># set enviroment permanently</div><div class="line">source /etc/profile.d/tomcat.sh</div><div class="line"></div><div class="line"># make shell executable permisson</div><div class="line">chmod +x $CATALINA_HOME/bin/startup.sh</div><div class="line">chmod +x $CATALINA_HOME/bin/shutdown.sh</div><div class="line">chmod +x $CATALINA_HOME/bin/catalina.sh</div><div class="line"></div><div class="line"># start tomcat</div><div class="line">sh $CATALINA_HOME/bin/startup.sh</div></pre></td></tr></table></figure>
<h3 id="用浏览器访问的时候，你很可能会失败，那就是firewall在作怪"><a href="#用浏览器访问的时候，你很可能会失败，那就是firewall在作怪" class="headerlink" title="用浏览器访问的时候，你很可能会失败，那就是firewall在作怪"></a>用浏览器访问的时候，你很可能会失败，那就是firewall在作怪</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">＃ Enable Firewalld</div><div class="line">systemctl enable firewalld</div><div class="line"></div><div class="line"># Start Firewalld</div><div class="line">systemctl start firewalld</div><div class="line"></div><div class="line"># check the status</div><div class="line">systemctl status firewalld</div></pre></td></tr></table></figure>
<h3 id="开启了Firewalld-添加如下"><a href="#开启了Firewalld-添加如下" class="headerlink" title="开启了Firewalld,添加如下"></a>开启了Firewalld,添加如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --add-port=8080/tcp</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><h1 id="创建调用脚本"><a href="#创建调用脚本" class="headerlink" title="创建调用脚本"></a>创建调用脚本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">vim /etc/init.d/tomcat</div><div class="line"></div><div class="line">######################################################</div><div class="line">#!/bin/sh</div><div class="line"># chkconfig: 2345 80 20</div><div class="line"></div><div class="line"># Description: Tomcat Start/Shutdown script</div><div class="line"></div><div class="line">export JAVA_HOME=/usr/lib/jvm/java</div><div class="line"></div><div class="line">case $1 in</div><div class="line">start)</div><div class="line">cd /opt/tomcat/bin/</div><div class="line">./startup.sh</div><div class="line">;;</div><div class="line">stop)</div><div class="line">cd /opt/tomcat/bin/</div><div class="line">./shutdown.sh</div><div class="line">;;</div><div class="line">restart)</div><div class="line">cd /opt/tomcat/bin/</div><div class="line">./shutdown.sh</div><div class="line">cd /opt/tomcat/bin/</div><div class="line">./startup.sh</div><div class="line">;;</div><div class="line">esac</div><div class="line">exit 0</div><div class="line">######################################################</div><div class="line"></div><div class="line"># Make it executable</div><div class="line">chmod a+x /etc/init.d/tomcat</div><div class="line"></div><div class="line"># Add the tomcat to service</div><div class="line">chkconfig --add tomcat</div><div class="line"></div><div class="line"># auto as reboot</div><div class="line">systemctl start tomcat</div><div class="line">chkconfig tomcat on</div></pre></td></tr></table></figure>
<h3 id="给Tomcat添加管理角色"><a href="#给Tomcat添加管理角色" class="headerlink" title="给Tomcat添加管理角色"></a>给Tomcat添加管理角色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">vim $CATALINA_HOME/conf/tomcat-users.xml</div><div class="line"></div><div class="line">#在&lt;tomcat-users&gt;&lt;/tomcat-users&gt;之间加入如下指令</div><div class="line"></div><div class="line">[...]</div><div class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;manager-script&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;manager-jmx&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;admin-gui&quot;/&gt;</div><div class="line">&lt;role rolename=&quot;admin-script&quot;/&gt;</div><div class="line">&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script&quot;/&gt;</div><div class="line">[...]</div><div class="line"></div><div class="line"># Restart tomcat </div><div class="line">systemctl restart tomcat</div><div class="line"></div><div class="line"># 用户名 密码  admin/admin</div><div class="line"></div><div class="line">#如果遇到403 Access Denied, 如下操作</div><div class="line">vim $CATALINA_HOME/webapps/manager/META-INF/context.xml</div><div class="line"></div><div class="line">#注释Value</div><div class="line"></div><div class="line">&lt;Context antiResourceLocking=&quot;false&quot; privileged=&quot;true&quot; &gt;</div><div class="line">&lt;!--</div><div class="line">&lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; /&gt;</div><div class="line">--&gt;</div><div class="line">&lt;/Context&gt;</div><div class="line"></div><div class="line">#访问host-manager时 403 Access Denied，操作类似</div><div class="line"></div><div class="line">vim $CATALINA_HOME/webapps/host-manager/META-INF/context.xml</div><div class="line"></div><div class="line">#注释Value</div><div class="line"></div><div class="line">&lt;Context antiResourceLocking=&quot;false&quot; privileged=&quot;true&quot; &gt;</div><div class="line">&lt;!--</div><div class="line">&lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; /&gt;</div><div class="line">--&gt;</div><div class="line">&lt;/Context&gt;</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>:)~</p>
]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;最近要从0开发新项目，以前都是用的CengOS6.5,觉得太历史了，7.x已经出来很久了。
而且云上的景象都是7.2了，没理由不用。第一次使用肯定会遇到坑，其实也是自身对这个系统的不了解。
尝鲜可定会出事，但是只要你打破舒适区，一路下来，你会觉得没那么难
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.nealma.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>React Native (十二) 趟雷过程中遇到的陷阱</title>
    <link href="http://www.nealma.com/2016/09/03/react-native-912-archive/"/>
    <id>http://www.nealma.com/2016/09/03/react-native-912-archive/</id>
    <published>2016-09-03T06:46:45.000Z</published>
    <updated>2016-11-17T01:57:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>导出分发包的过程中，遇到了许多小问题，做个总结吧</p>
<a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>导出分发包的过程中，遇到了许多小问题，做个总结吧
</code></pre><p>开发环境：<br>OS: Mac 10.11.6<br>Xcode: Version 8.0 (8A218a)</p>
<h3 id="趟雷过程中遇到的陷阱"><a href="#趟雷过程中遇到的陷阱" class="headerlink" title="趟雷过程中遇到的陷阱"></a>趟雷过程中遇到的陷阱</h3><ul>
<li><p>{For iOS} 突然Products中的archive变成灰色，不能archive了</p>
<p>  把device换成Generic iOS Device</p>
</li>
<li><p>在模拟器中运行出现</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">clang: error: no such file or directory: &apos;/Users/neal/Library/Developer/Xcode/DerivedData/haiji-hakrywogbjraxiheecjpbwbxsood/Build/Products/Debug-iphonesimulator/libReact.a&apos;</div></pre></td></tr></table></figure>
<pre><code>把Build Settings -&gt; Architectures -&gt; Build Active Architectures Only 设置成 NO
</code></pre><ul>
<li><p>Duplicate module name: XXX</p>
<p>   有可能是React的版本不一样，我的做法是  </p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm -rf node_modules &amp;&amp; npm install</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>：）～
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;导出分发包的过程中，遇到了许多小问题，做个总结吧&lt;/p&gt;
    
    </summary>
    
      <category term="React-Native" scheme="http://www.nealma.com/categories/React-Native/"/>
    
    
      <category term="React-Native" scheme="http://www.nealma.com/tags/React-Native/"/>
    
      <category term="RN" scheme="http://www.nealma.com/tags/RN/"/>
    
      <category term="ipa" scheme="http://www.nealma.com/tags/ipa/"/>
    
  </entry>
  
</feed>
