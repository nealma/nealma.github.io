<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>neal.ma</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.nealma.com/"/>
  <updated>2016-09-22T13:08:42.000Z</updated>
  <id>http://www.nealma.com/</id>
  
  <author>
    <name>neal.ma</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring-Boot（五) 全局异常处理</title>
    <link href="http://www.nealma.com/2016/05/30/spring-boot-5-exception/"/>
    <id>http://www.nealma.com/2016/05/30/spring-boot-5-exception/</id>
    <published>2016-05-30T03:46:45.000Z</published>
    <updated>2016-09-22T13:08:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>广大码农同胞在写程序的时候，总是会遇到处理各种Exception，神马空指针啦，
再有就是处理DataBase的IO异常啦，反正哪都有他们的影子，真是阴魂不散啊。但是呢，
你又不能置之不理，那就求救于Spring的全局处理吧
</code></pre><p>：）～</p>
<pre><code>Spring-Boot默认实现了简单的错误页面，但是那个真是惨不忍睹。追求用户体验的你，当然想
换成自己的页面了，看着美美哒。

在实际工作中，我们不可能都是一出错就跳到html页面，根据我们自己的业务，我们通常还要以接口的形式
返回固定格式的数据，最多的就是json啦。
</code></pre><p>下面就以html和json两种形式介绍如何实现。</p>
<h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><pre><code>现在只要能用注解，谁还实用xml来配置啊。
正好这里涉及到两个annotation类：
* @ControllerAdvice 全局异常处理类，不再需要每个Controller里一一定义
* @ExceptionHandler 定义针对每种类型的Exception

当然啦，如果你在业务中已经trycatch啦，那就别指望被处理了，你自己都处理了
别人当然不操心了
</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 全局异常处理类</div><div class="line"> */</div><div class="line"><span class="meta">@ControllerAdvice</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@ExceptionHandler</span>(value = NullPointerException.class)</div><div class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">defaultErrorHandler</span><span class="params">(HttpServletRequest req, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        LOGGER.error(<span class="string">"[error] --&gt; &#123;&#125;"</span>, e);</div><div class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</div><div class="line">        mav.addObject(<span class="string">"exception"</span>, e);</div><div class="line">        mav.addObject(<span class="string">"url"</span>, req.getRequestURL());</div><div class="line">        mav.setViewName(<span class="string">"error"</span>);</div><div class="line">        <span class="keyword">return</span> mav;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><pre><code>在前面的基础上，添加输出json的方法，其中@ResponseBody是必须条件
</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 全局异常处理类</div><div class="line"> */</div><div class="line"><span class="meta">@ControllerAdvice</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@ExceptionHandler</span>(value = NullPointerException.class)</div><div class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">defaultErrorHandler</span><span class="params">(HttpServletRequest req, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        LOGGER.error(<span class="string">"[error] --&gt; &#123;&#125;"</span>, e);</div><div class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</div><div class="line">        mav.addObject(<span class="string">"exception"</span>, e);</div><div class="line">        mav.addObject(<span class="string">"url"</span>, req.getRequestURL());</div><div class="line">        mav.setViewName(<span class="string">"error"</span>);</div><div class="line">        <span class="keyword">return</span> mav;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@ExceptionHandler</span>(value = AppException.class)</div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="function"><span class="keyword">public</span> MsgOut <span class="title">json</span><span class="params">(Exception ex)</span> </span>&#123;</div><div class="line">        <span class="comment">//<span class="doctag">TODO:</span>记录日志</span></div><div class="line">        LOGGER.error(<span class="string">"AppException"</span>, ex);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> MsgOut.error(ex);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><pre><code>在Spring-Boot中，没有被全局处理类（GlobalExceptionHandler）捕获的异常，ErrorController会帮你补漏。
如果你使用Spring Validation来校验
要成功捕获 MethodArgumentNotValidException，在控制器方法上就不能定义 BindingResult 参数接收校验结果，不然如果校验失败 Spring 是不会抛出 MethodArgumentNotValidException 异常的，自然而然在我们的 GlobalExceptionHandler 就无法处理了。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;广大码农同胞在写程序的时候，总是会遇到处理各种Exception，神马空指针啦，
再有就是处理DataBase的IO异常啦，
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
      <category term="Exception" scheme="http://www.nealma.com/tags/Exception/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot （四) 集成Spring Security</title>
    <link href="http://www.nealma.com/2016/04/30/spring-boot-4-security/"/>
    <id>http://www.nealma.com/2016/04/30/spring-boot-4-security/</id>
    <published>2016-04-30T03:46:45.000Z</published>
    <updated>2016-09-22T13:11:37.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>shiro可以完全解决有关安全的问题，但是项目大多使用的是Spring框架，所以没必要在引入其他依赖，
so，还是折腾下亲儿子的东东吧
</code></pre><p>使用的开发环境：<br>os: mac<br>ide: idea<br>build: maven</p>
<pre><code>以前都是使用xml来配置，但是spring-boot提倡Java Config的使用，
折腾下来还是很多收获的。有关权限管理，行内大都秉承
以角色为基础的访问控制（Role-based access control, RBAC）
在Spring Security中，实现原理很简单，通过AOP对所要管理的资源（url或者method）进行拦截，
在其内部维护了一条安全过滤链，有用户服务（UserDetailsService)、身份认证服务（AuthenticationProvider）、
访问决策管理（AccessDecisionManager）、记住我(remember-me)等普世功能。
当然，使用Spring-boot离不开Java Config，come on,just do it.
</code></pre><h3 id="WebSecurityConfig"><a href="#WebSecurityConfig" class="headerlink" title="WebSecurityConfig"></a>WebSecurityConfig</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.caogen"</span>)</div><div class="line"><span class="meta">@EnableWebSecurity</span></div><div class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>, jsr250Enabled = <span class="keyword">true</span>)</div><div class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:application.properties"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> MyAuthenticationProvider authenticationProvider;<span class="comment">//自定义验证</span></div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> MyUserDetailsService userDetailsService;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> MyPersistentTokenRepository tokenRepository;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> MyAccessDecisionManager accessDecisionManager;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        auth.authenticationProvider(authenticationProvider);</div><div class="line">        auth.userDetailsService(userDetailsService);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        http</div><div class="line">                .headers()</div><div class="line">                    .frameOptions().sameOrigin().disable()<span class="comment">//disable X-Frame-Options</span></div><div class="line">                .authorizeRequests()</div><div class="line"><span class="comment">//                    .accessDecisionManager(accessDecisionManager)//用注解替换,如果不使用注解，取消注释</span></div><div class="line">                    .anyRequest().fullyAuthenticated()<span class="comment">//其他url需要鉴权</span></div><div class="line">                .and()</div><div class="line">                    .formLogin()</div><div class="line">                        .usernameParameter(<span class="string">"username"</span>)</div><div class="line">                        .passwordParameter(<span class="string">"password"</span>)</div><div class="line">                        .loginProcessingUrl(<span class="string">"/login"</span>)</div><div class="line">                        .loginPage(<span class="string">"/login"</span>)</div><div class="line">                        .failureUrl(<span class="string">"/login?error"</span>)</div><div class="line">                        .permitAll()</div><div class="line">                .and()</div><div class="line">                    .logout()</div><div class="line">                        .deleteCookies(<span class="string">"JSESSIONID"</span>)</div><div class="line">                        .logoutRequestMatcher(<span class="keyword">new</span> AntPathRequestMatcher(<span class="string">"/logout"</span>))</div><div class="line">                        .logoutSuccessUrl(<span class="string">"/login"</span>)</div><div class="line">                .and()</div><div class="line">                    .rememberMe()</div><div class="line">                        .tokenRepository(tokenRepository)</div><div class="line">                        .rememberMeServices(rememberMeServices())</div><div class="line">                        .rememberMeParameter(<span class="string">"remember-me"</span>).key(<span class="string">"key"</span>)</div><div class="line">                        .tokenValiditySeconds(<span class="number">86400</span>)</div><div class="line">                .and()</div><div class="line">                    .csrf().disable() <span class="comment">//disable csrf</span></div><div class="line">                    .sessionManagement().maximumSessions(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> RememberMeServices <span class="title">rememberMeServices</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// Key must be equal to rememberMe().key()</span></div><div class="line">        PersistentTokenBasedRememberMeServices rememberMeServices =</div><div class="line">                <span class="keyword">new</span> PersistentTokenBasedRememberMeServices(<span class="string">"key"</span>, userDetailsService, tokenRepository);</div><div class="line">        rememberMeServices.setCookieName(<span class="string">"remember-me"</span>);</div><div class="line">        rememberMeServices.setParameter(<span class="string">"remember-me"</span>);</div><div class="line">        rememberMeServices.setTokenValiditySeconds(<span class="number">864000</span>);</div><div class="line">        <span class="keyword">return</span> rememberMeServices;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MyUserDetailsService"><a href="#MyUserDetailsService" class="headerlink" title="MyUserDetailsService"></a>MyUserDetailsService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * SPRING SECURITY用户登录处理</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span>(<span class="string">"MyUserDetailsServiceImpl"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserDetailsService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> SysUserMapper sysUserMapper;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> RoleMapper roleMapper;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> UserRoleLinkMapper userRoleLinkMapper;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ResourceService resourceService;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</div><div class="line"></div><div class="line">        LOGGER.info(<span class="string">"loadUserByUsername --&gt; [&#123;&#125;]"</span>, username);</div><div class="line"></div><div class="line">        SysUser sysUser = <span class="keyword">new</span> SysUser();</div><div class="line">        sysUser.setUsername(username);</div><div class="line">        List&lt;SysUser&gt; userList = sysUserMapper.select(sysUser);</div><div class="line">        <span class="keyword">if</span> (userList == <span class="keyword">null</span> || userList.size() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UsernameNotFoundException(<span class="string">"username not found."</span>);</div><div class="line">        &#125;</div><div class="line">        sysUser = userList.get(<span class="number">0</span>);</div><div class="line">        UserRoleLink userRoleLink = <span class="keyword">new</span> UserRoleLink();</div><div class="line">        userRoleLink.setUserId(sysUser.getId());</div><div class="line"></div><div class="line">        List&lt;UserRoleLink&gt; userRoleLinks = userRoleLinkMapper.select(userRoleLink);</div><div class="line">        List&lt;GrantedAuthority&gt; grantedAuthorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">        List&lt;Long&gt; roleIds = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">        Optional&lt;List&lt;UserRoleLink&gt;&gt; userRoleLinksOptional = Optional.ofNullable(userRoleLinks);</div><div class="line">        userRoleLinksOptional.ifPresent(userRoleLinks1 -&gt; &#123;</div><div class="line">            userRoleLinks1.forEach(userRoleLink1 -&gt; &#123;</div><div class="line">                roleIds.add(userRoleLink1.getRoleId());</div><div class="line">                <span class="keyword">if</span>(userRoleLink1.getRoleId() == <span class="number">1L</span>)&#123;</div><div class="line">                    GrantedAuthority grantedAuthority = <span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">"ROLE_root"</span>);<span class="comment">//root角色特权</span></div><div class="line">                    grantedAuthorities.add(grantedAuthority);</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        &#125;);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//        List&lt;Role&gt; roles = roleMapper.selectBatch(roleIds);//V1.0</span></div><div class="line">        List&lt;Resource&gt; resources = resourceService.selectByRoleId(roleIds.toArray(<span class="keyword">new</span> Long[<span class="number">0</span>]));</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(resources != <span class="keyword">null</span> &amp;&amp; resources.size() &gt; <span class="number">0</span>)&#123;</div><div class="line">            resources.forEach(resource -&gt; &#123;</div><div class="line">                GrantedAuthority grantedAuthority = <span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">"ROLE_"</span>+resource.getLink());<span class="comment">//必须ROLE_为前缀</span></div><div class="line">                grantedAuthorities.add(grantedAuthority);</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        LOGGER.info(<span class="string">"grantedAuthorities --&gt; &#123;&#125;"</span>, grantedAuthorities);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(username, sysUser.getPassword(), <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, grantedAuthorities);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MyAuthenticationProvider"><a href="#MyAuthenticationProvider" class="headerlink" title="MyAuthenticationProvider"></a>MyAuthenticationProvider</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 自定义验证方式</div><div class="line"> */</div><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAuthenticationProvider</span> <span class="keyword">implements</span> <span class="title">AuthenticationProvider</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> MyUserDetailsService userService;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Authentication <span class="title">authenticate</span><span class="params">(Authentication authentication)</span></span></div><div class="line">                                                <span class="keyword">throws</span> AuthenticationException &#123;</div><div class="line">        String username = authentication.getName();</div><div class="line">        String password = (String) authentication.getCredentials();</div><div class="line"></div><div class="line">        UserDetails user = userService.loadUserByUsername(username);</div><div class="line"></div><div class="line">        LOGGER.info(<span class="string">"password=&#123;&#125;, needPassword=&#123;&#125;"</span>, password, user.getPassword());</div><div class="line">        <span class="comment">//密码匹配验证</span></div><div class="line">        <span class="keyword">if</span> (passwordEncoder().matches(password, user.getPassword())) &#123;</div><div class="line">            Collection&lt;? extends GrantedAuthority&gt; authorities = user.getAuthorities();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UsernamePasswordAuthenticationToken(user, password, authorities);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BadCredentialsException(<span class="string">"Wrong password."</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">   <span class="meta">@Bean</span></div><div class="line">   <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span></span>&#123;</div><div class="line">       <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</div><div class="line">   &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(Class&lt;?&gt; aClass)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="MyAccessDecisionManager"><a href="#MyAccessDecisionManager" class="headerlink" title="MyAccessDecisionManager"></a>MyAccessDecisionManager</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 验证资源跟角色之间的关系</div><div class="line"> */</div><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAccessDecisionManager</span> <span class="keyword">implements</span> <span class="title">AccessDecisionManager</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> RoleService roleService;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * // authentication 为用户所被赋予的权限, configAttributes 为访问相应的资源应该具有的权限。</div><div class="line">     * <span class="doctag">@param</span> authentication</div><div class="line">     * <span class="doctag">@param</span> object</div><div class="line">     * <span class="doctag">@param</span> configAttributes</div><div class="line">     * <span class="doctag">@throws</span> AccessDeniedException</div><div class="line">     * <span class="doctag">@throws</span> InsufficientAuthenticationException</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">decide</span><span class="params">(Authentication authentication, Object object, Collection&lt;ConfigAttribute&gt; configAttributes)</span></span></div><div class="line">            <span class="keyword">throws</span> AccessDeniedException, InsufficientAuthenticationException &#123;</div><div class="line"></div><div class="line">        Collection&lt;GrantedAuthority&gt; userHasRoles =</div><div class="line">                (Collection&lt;GrantedAuthority&gt;) authentication.getAuthorities();</div><div class="line"></div><div class="line">        LOGGER.info(<span class="string">"CurrentUser=&#123;&#125; CurrentHasRoles = &#123;&#125;"</span>, authentication.getName(), Arrays.asList(userHasRoles));</div><div class="line"></div><div class="line">        <span class="comment">//放行[超级管理员]角色</span></div><div class="line">        Iterator&lt;GrantedAuthority&gt; iterator = userHasRoles.iterator();</div><div class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</div><div class="line">            GrantedAuthority grantedAuthority = iterator.next();</div><div class="line">            <span class="keyword">if</span>(<span class="string">"系统管理员"</span>.equals(grantedAuthority.getAuthority()))&#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        LOGGER.info(<span class="string">"1 CurrentUser=&#123;&#125; CurrentHasRoles = &#123;&#125;"</span>, authentication.getName(), Arrays.asList(userHasRoles));</div><div class="line"></div><div class="line">        Collection&lt;GrantedAuthority&gt; uriHasRoles = getGrantedAuthoritys(object);</div><div class="line">        <span class="keyword">if</span> (uriHasRoles == <span class="keyword">null</span> || uriHasRoles.size() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Optional&lt;Collection&lt;GrantedAuthority&gt;&gt; grantedAuthoritiesForOptional =</div><div class="line">                Optional.ofNullable(userHasRoles);</div><div class="line"></div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            grantedAuthoritiesForOptional.ifPresent(userHasRolesNotNull -&gt; &#123;</div><div class="line">                userHasRolesNotNull.forEach(userHasRole -&gt; &#123;</div><div class="line">                    uriHasRoles.forEach(uriHasRole -&gt; &#123;</div><div class="line">                        LOGGER.info(<span class="string">"userHasRole=&#123;&#125;, uriHasRole=&#123;&#125;"</span>, userHasRole, uriHasRole);</div><div class="line">                        <span class="keyword">if</span> (userHasRole.getAuthority().equals(uriHasRole.getAuthority())) &#123;</div><div class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> AppException(<span class="string">"break"</span>);</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125;);</div><div class="line">            &#125;);</div><div class="line">        &#125;<span class="keyword">catch</span>(AppException be)&#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AccessDeniedException(<span class="string">"Access Denied."</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> Collection&lt;GrantedAuthority&gt; <span class="title">getGrantedAuthoritys</span><span class="params">(Object object)</span> </span>&#123;</div><div class="line">        FilterInvocation filterInvocation = (FilterInvocation) object;</div><div class="line">        String uri = <span class="keyword">new</span> StringBuilder(filterInvocation.getRequestUrl()).deleteCharAt(<span class="number">0</span>).toString();</div><div class="line">        <span class="keyword">if</span>(<span class="string">""</span>.equals(uri))&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        List&lt;Role&gt; uriHasRoles = roleService.selectByResourceURI(uri);</div><div class="line">        LOGGER.info(<span class="string">"fullRequestUrl=&#123;&#125;, requestUrl=&#123;&#125;, uriHasRoles=&#123;&#125;"</span>,</div><div class="line">                filterInvocation.getFullRequestUrl(),</div><div class="line">                filterInvocation.getRequestUrl(),</div><div class="line">                uriHasRoles);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (uriHasRoles == <span class="keyword">null</span> || uriHasRoles.size() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        Collection&lt;GrantedAuthority&gt; grantedAuthorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        uriHasRoles.forEach(item -&gt; &#123;</div><div class="line">            GrantedAuthority grantedAuthority = <span class="keyword">new</span> SimpleGrantedAuthority(item.getName());</div><div class="line">            grantedAuthorities.add(grantedAuthority);</div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">return</span> grantedAuthorities;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(ConfigAttribute configAttribute)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(Class&lt;?&gt; aClass)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Remember-Me-使用database方式，MyPersistentTokenRepository"><a href="#Remember-Me-使用database方式，MyPersistentTokenRepository" class="headerlink" title="Remember-Me 使用database方式，MyPersistentTokenRepository"></a>Remember-Me 使用database方式，MyPersistentTokenRepository</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 记住我 持久化方式</div><div class="line"> */</div><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyPersistentTokenRepository</span> <span class="keyword">implements</span> <span class="title">PersistentTokenRepository</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(getClass());</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> RememberMeMapper remembermeMapper;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createNewToken</span><span class="params">(PersistentRememberMeToken persistentRememberMeToken)</span> </span>&#123;</div><div class="line">        RememberMe rememberMe = <span class="keyword">new</span> RememberMe();</div><div class="line">        rememberMe.setUsername(persistentRememberMeToken.getUsername());</div><div class="line">        rememberMe.setSeries(persistentRememberMeToken.getSeries());</div><div class="line">        rememberMe.setDate(persistentRememberMeToken.getDate());</div><div class="line">        rememberMe.setTokenValue(persistentRememberMeToken.getTokenValue());</div><div class="line">        remembermeMapper.insert(rememberMe);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateToken</span><span class="params">(String s, String s1, Date date)</span> </span>&#123;</div><div class="line">        RememberMe rememberMe = <span class="keyword">new</span> RememberMe();</div><div class="line">        rememberMe.setUsername(<span class="string">""</span>);</div><div class="line">        rememberMe.setSeries(s);</div><div class="line">        rememberMe.setTokenValue(s1);</div><div class="line">        rememberMe.setDate(date);</div><div class="line">        remembermeMapper.updateByPK(rememberMe);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> PersistentRememberMeToken <span class="title">getTokenForSeries</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">        RememberMe rememberMe = remembermeMapper.selectByPK(s);</div><div class="line">        PersistentRememberMeToken persistentRememberMeToken =</div><div class="line">                <span class="keyword">new</span> PersistentRememberMeToken(rememberMe.getUsername(),</div><div class="line">                        rememberMe.getSeries(),</div><div class="line">                        rememberMe.getTokenValue(),</div><div class="line">                        rememberMe.getDate()</div><div class="line">                );</div><div class="line">        <span class="keyword">return</span> persistentRememberMeToken;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeUserTokens</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">        remembermeMapper.deleteByPK(s);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="如果用注解的方式，及-RolesAllowed（jsr250）"><a href="#如果用注解的方式，及-RolesAllowed（jsr250）" class="headerlink" title="如果用注解的方式，及@RolesAllowed（jsr250）"></a>如果用注解的方式，及@RolesAllowed（jsr250）</h3><p>   那么务必将jsr250Enabled＝true在config中声明，然后再所需控制的方法上加上注解，<br>   jsr250有三个注解，分别是@RolesAllowed,@PermitAll,@DenyAll,功能跟名字一样，<br>   一目了然，如果有多个角色，可以@RolesAllowed({“ROLE_A”, “ROLE<em>B”}),这里角色的前缀<br>   一定是”ROLE</em>“,约定好的，就不要计较了。</p>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>   使用过程中，总是下意识的按照Spring Security提供的思路去实现，无可厚非，但是我仔细琢磨后，<br>   觉得从便利性和实用方面考虑，每个方法上的注解要约定好名称，例如：</p>
   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@RolesAllowed(&#123;&quot;ROLE_roles:view&quot;&#125;)</div><div class="line">public void find&#123;...&#125;</div><div class="line"></div><div class="line">@RolesAllowed(&#123;&quot;ROLE_roles:update&quot;&#125;)</div><div class="line">public void update&#123;...&#125;</div><div class="line"></div><div class="line">@RolesAllowed(&#123;&quot;ROLE_roles:delete&quot;&#125;)</div><div class="line">public void delete&#123;...&#125;</div><div class="line"></div><div class="line">@RolesAllowed(&#123;&quot;ROLE_roles:create&quot;&#125;)</div><div class="line">public void create&#123;...&#125;</div><div class="line"></div><div class="line">`</div></pre></td></tr></table></figure>
<p>   这样，表面是把权限赋予了角色，还能Dynamic Resource，何乐而不为呢。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;shiro可以完全解决有关安全的问题，但是项目大多使用的是Spring框架，所以没必要在引入其他依赖，
so，还是折腾下亲儿
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
      <category term="Spring-Security" scheme="http://www.nealma.com/tags/Spring-Security/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot（三） 集成MyBatis</title>
    <link href="http://www.nealma.com/2016/04/29/spring-boot-3-mybatis/"/>
    <id>http://www.nealma.com/2016/04/29/spring-boot-3-mybatis/</id>
    <published>2016-04-29T03:46:45.000Z</published>
    <updated>2016-09-20T07:25:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis在国内一直很流行，在ORM框架中使用比例很高。<br>由于MyBatis不是Spring的亲生儿子，所以依赖的版本很发麻，不像其他的依赖，直接引入就可以，还得看版本。<br>经过几次尝试，下文给出的是可以正常使用的。</p>
<p>本记录使用的开发环境：<br>os: mac<br>ide: idea<br>build: maven</p>
<h3 id="POM依赖"><a href="#POM依赖" class="headerlink" title="POM依赖"></a>POM依赖</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;!-- properties --&gt;</div><div class="line">&lt;properties&gt;</div><div class="line">    &lt;spring.boot.mybatis&gt;1.0.2&lt;/spring.boot.mybatis&gt;</div><div class="line">    &lt;mybatis.version&gt;3.4.1&lt;/mybatis.version&gt;</div><div class="line">    &lt;mybatis.spring.version&gt;1.3.0&lt;/mybatis.spring.version&gt;</div><div class="line">&lt;/properties</div><div class="line">&lt;!-- mybatis --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;$&#123;mybatis.version&#125;&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;!-- mybatis-spring --&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;$&#123;mybatis.spring.version&#125;&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h3 id="属性配置application-properties"><a href="#属性配置application-properties" class="headerlink" title="属性配置application.properties"></a>属性配置application.properties</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#datasource</div><div class="line">spring.datasource.url=jdbc:mysql://localhost:3306/db_name?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</div><div class="line">spring.datasource.username=******</div><div class="line">spring.datasource.password=******</div><div class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</div><div class="line"></div><div class="line">#mybatis</div><div class="line">#mapper路径</div><div class="line">mybatis.mapperLocations=classpath*:**/mappers/*.xml</div><div class="line">#model包</div><div class="line">mybatis.typeAliasesPackage=com.xxxx.domain</div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>是不是很简单，没有太多的配置，清爽多了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MyBatis在国内一直很流行，在ORM框架中使用比例很高。&lt;br&gt;由于MyBatis不是Spring的亲生儿子，所以依赖的版本很发麻，不像其他的依赖，直接引入就可以，还得看版本。&lt;br&gt;经过几次尝试，下文给出的是可以正常使用的。&lt;/p&gt;
&lt;p&gt;本记录使用的开发环境：&lt;br
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="MyBatis" scheme="http://www.nealma.com/tags/MyBatis/"/>
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot（二） 集成springloaded</title>
    <link href="http://www.nealma.com/2016/04/28/spring-boot-2-hot-swap/"/>
    <id>http://www.nealma.com/2016/04/28/spring-boot-2-hot-swap/</id>
    <published>2016-04-28T03:46:45.000Z</published>
    <updated>2016-09-20T17:37:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>我在开发的时候，总是会及时对自己的程序进行测试，总是频繁的重启web server，容器不烦我们都觉得烦了。<br>福音来了，正好有springloaded，解决了我们的烦恼。</p>
<p>本记录使用的开发环境：<br>os: mac<br>ide: idea<br>build: maven<br>spring-boot-version: 1.4.0.RELEASE</p>
<h3 id="POM依赖"><a href="#POM依赖" class="headerlink" title="POM依赖"></a>POM依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span></span></div></pre></td></tr></table></figure>
<h3 id="maven-plugin"><a href="#maven-plugin" class="headerlink" title="maven plugin"></a>maven plugin</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p> 一开始以为直接在maven plugin中加入依赖就可以了，而在实际当中没有任何动静，直到把devtools和springloaded加入依赖，才能如愿以偿。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我在开发的时候，总是会及时对自己的程序进行测试，总是频繁的重启web server，容器不烦我们都觉得烦了。&lt;br&gt;福音来了，正好有springloaded，解决了我们的烦恼。&lt;/p&gt;
&lt;p&gt;本记录使用的开发环境：&lt;br&gt;os: mac&lt;br&gt;ide: idea&lt;br&gt;bu
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="MyBatis" scheme="http://www.nealma.com/tags/MyBatis/"/>
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Vim Plugin 自动补全(NERDTree)</title>
    <link href="http://www.nealma.com/2016/04/26/vim-plugin-install-nerttree/"/>
    <id>http://www.nealma.com/2016/04/26/vim-plugin-install-nerttree/</id>
    <published>2016-04-26T04:46:45.000Z</published>
    <updated>2016-09-06T07:12:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Vim在安装目录工具NERDTree的时候，遇到了坑。</p>
<p>本记录使用的开发环境：<br>os: mac</p>
<h3 id="其实也没啥，就是不知道怎么启用，哈哈"><a href="#其实也没啥，就是不知道怎么启用，哈哈" class="headerlink" title="其实也没啥，就是不知道怎么启用，哈哈"></a>其实也没啥，就是不知道怎么启用，哈哈</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#进入vim</div><div class="line"></div><div class="line">:NERDTree ＃回车，就看到啦</div><div class="line"></div><div class="line">#Crtl + w 是前缀唤醒组合</div><div class="line"></div><div class="line">#左右切换</div><div class="line">h l </div><div class="line"></div><div class="line">#退出</div><div class="line">q</div><div class="line"></div><div class="line">#每次都需要输入NERDTree是不是很麻烦，别怕，可以很省事的</div><div class="line"></div><div class="line">#vim ~/.vimrc 加入</div><div class="line">nnoremap &lt;silent&gt; &lt;F5&gt; :NERDTree&lt;CR&gt;</div></pre></td></tr></table></figure>
<p>:D-</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vim在安装目录工具NERDTree的时候，遇到了坑。&lt;/p&gt;
&lt;p&gt;本记录使用的开发环境：&lt;br&gt;os: mac&lt;/p&gt;
&lt;h3 id=&quot;其实也没啥，就是不知道怎么启用，哈哈&quot;&gt;&lt;a href=&quot;#其实也没啥，就是不知道怎么启用，哈哈&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Vim" scheme="http://www.nealma.com/tags/Vim/"/>
    
      <category term="NERDTree" scheme="http://www.nealma.com/tags/NERDTree/"/>
    
  </entry>
  
  <entry>
    <title>Vim Plugin 自动补全(YouCompleteMe)</title>
    <link href="http://www.nealma.com/2016/04/26/vim-plugin-install-youcompleteme/"/>
    <id>http://www.nealma.com/2016/04/26/vim-plugin-install-youcompleteme/</id>
    <published>2016-04-26T04:46:45.000Z</published>
    <updated>2016-09-06T06:41:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Vim在安装自动补全插件YouCompleteMe的时候，遇到了坑。</p>
<p>本记录使用的开发环境：<br>os: mac</p>
<h3 id="首先Vim版本过低，提示7-3"><a href="#首先Vim版本过低，提示7-3" class="headerlink" title="首先Vim版本过低，提示7.3+"></a>首先Vim版本过低，提示7.3+</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">brew install vim</div><div class="line"></div><div class="line">#安装完之后，查看版本还是7.3的，经过搜索解决办法，发现执行如下可以解决</div><div class="line">exec $SHELL</div><div class="line"></div><div class="line">#重启terminal</div></pre></td></tr></table></figure>
<h3 id="再次抱错"><a href="#再次抱错" class="headerlink" title="再次抱错"></a>再次抱错</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">YouCompleteMe unavailable: No module named future</div></pre></td></tr></table></figure>
<p>这次是因为python的问题，<br>于是进入YouCompleteMe目录，执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./install.py -all</div></pre></td></tr></table></figure>
<p>回车，这时提示你一些第三方依赖缺失，执行下面的命令,</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git submodule update --init --recursive</div></pre></td></tr></table></figure>
<p>我的网速不给力，需要很长时间，耐心等待吧，要不就干别的去的</p>
<p>完成之后，重新安装一遍</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim +PluginInstall</div></pre></td></tr></table></figure>
<p>:D-</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vim在安装自动补全插件YouCompleteMe的时候，遇到了坑。&lt;/p&gt;
&lt;p&gt;本记录使用的开发环境：&lt;br&gt;os: mac&lt;/p&gt;
&lt;h3 id=&quot;首先Vim版本过低，提示7-3&quot;&gt;&lt;a href=&quot;#首先Vim版本过低，提示7-3&quot; class=&quot;headerlin
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Vim" scheme="http://www.nealma.com/tags/Vim/"/>
    
      <category term="Plugin" scheme="http://www.nealma.com/tags/Plugin/"/>
    
  </entry>
  
  <entry>
    <title>Vim 增强</title>
    <link href="http://www.nealma.com/2016/04/26/vim-plugin-enhance/"/>
    <id>http://www.nealma.com/2016/04/26/vim-plugin-enhance/</id>
    <published>2016-04-26T03:46:45.000Z</published>
    <updated>2016-09-06T06:19:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>vim我们在用的时候，没有插件和有插件那是天壤之别。<br>快来享受plugin的强大吧</p>
<p>本记录使用的开发环境：<br>os: mac</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">set nocompatible              &quot; be iMproved, required</div><div class="line">filetype off                  &quot; required</div><div class="line"></div><div class="line">set rtp+=~/.vim/bundle/Vundle.vim</div><div class="line">call vundle#begin()</div><div class="line"></div><div class="line">Plugin &apos;VundleVim/Vundle.vim&apos;</div><div class="line">Plugin &apos;scrooloose/nerdtree&apos;</div><div class="line">Plugin &apos;godlygeek/tabular&apos;</div><div class="line">Plugin &apos;raimondi/delimitmate&apos;</div><div class="line">Plugin &apos;terryma/vim-multiple-cursors&apos;</div><div class="line">Plugin &apos;scrooloose/syntastic&apos;</div><div class="line">Plugin &apos;bling/vim-airline&apos;</div><div class="line">Plugin &apos;Valloric/YouCompleteMe&apos;</div><div class="line"></div><div class="line">call vundle#end()            &quot; required</div><div class="line">filetype plugin indent on    &quot; required</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vim我们在用的时候，没有插件和有插件那是天壤之别。&lt;br&gt;快来享受plugin的强大吧&lt;/p&gt;
&lt;p&gt;本记录使用的开发环境：&lt;br&gt;os: mac&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Vim" scheme="http://www.nealma.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis Generator 改造</title>
    <link href="http://www.nealma.com/2016/04/25/mybatis-generator-how-to-use/"/>
    <id>http://www.nealma.com/2016/04/25/mybatis-generator-how-to-use/</id>
    <published>2016-04-25T03:46:45.000Z</published>
    <updated>2016-09-20T04:15:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis在java的ORM地位一致保持，但是我们在写mapper的时候，也是头疼，关键是总是手误，所以呢，就有了mybatis-generator,<br>但是官方的工具又不符合我们自己的口味，像什么不能在pojo类中根据表的字段注释来自动加注释，<br>生成的mapper不够优雅,于是不安分的我们就开始各种改造…</p>
<p>MyBatis Version : 1.3.4-SNAPSHOT</p>
<h3 id="在POJO类上添加注释"><a href="#在POJO类上添加注释" class="headerlink" title="在POJO类上添加注释"></a>在POJO类上添加注释</h3><p>修改Field.java类</p>
<p>＊ 添加remarks成员变量，同时完成setter和getter方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> String remarks;</div><div class="line"></div><div class="line">getter...</div><div class="line">setter...</div></pre></td></tr></table></figure>
<ul>
<li>修改getFormattedContent方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sb.append(<span class="string">';'</span>);</div><div class="line"><span class="comment">//新增</span></div><div class="line"><span class="keyword">if</span> (remarks != <span class="keyword">null</span> &amp;&amp; remarks.length() &gt; <span class="number">1</span>)&#123;</div><div class="line">   sb.append(<span class="string">"//"</span>).append(remarks);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>＊ 给remarks赋值，修改JavaBeansUtil.getJavaBeansField方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">field.setName(property);</div><div class="line"><span class="comment">//添加如下代码</span></div><div class="line">field.setRemarks(introspectedColumn.getRemarks());</div></pre></td></tr></table></figure>
<h3 id="mavne配置"><a href="#mavne配置" class="headerlink" title="mavne配置"></a>mavne配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;plugin&gt;</div><div class="line">    &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.3.4-SNAPSHOT&lt;/version&gt;</div><div class="line">    &lt;configuration&gt;</div><div class="line">        &lt;configurationFile&gt;src/main/resources/mybatis/mybatis-generator-config.xml&lt;/configurationFile&gt;</div><div class="line">        &lt;!--允许移动生成的文件--&gt;</div><div class="line">        &lt;verbose&gt;true&lt;/verbose&gt;</div><div class="line">        &lt;!--允许覆盖生成的文件--&gt;</div><div class="line">        &lt;overwrite&gt;true&lt;/overwrite&gt;</div><div class="line">    &lt;/configuration&gt;</div><div class="line">    &lt;executions&gt;</div><div class="line">        &lt;execution&gt;</div><div class="line">            &lt;id&gt;Generate MyBatis Artifacts&lt;/id&gt;</div><div class="line">            &lt;goals&gt;</div><div class="line">                &lt;goal&gt;generate&lt;/goal&gt;</div><div class="line">            &lt;/goals&gt;</div><div class="line">        &lt;/execution&gt;</div><div class="line">    &lt;/executions&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line">        &lt;!-- 数据库驱动  --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;5.1.39&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">    &lt;/dependencies&gt;</div><div class="line">&lt;/plugin&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MyBatis在java的ORM地位一致保持，但是我们在写mapper的时候，也是头疼，关键是总是手误，所以呢，就有了mybatis-generator,&lt;br&gt;但是官方的工具又不符合我们自己的口味，像什么不能在pojo类中根据表的字段注释来自动加注释，&lt;br&gt;生成的map
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="MyBatis" scheme="http://www.nealma.com/tags/MyBatis/"/>
    
      <category term="Generator" scheme="http://www.nealma.com/tags/Generator/"/>
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot（一） 环境搭建</title>
    <link href="http://www.nealma.com/2016/04/20/spring-boot-1-how-to-use/"/>
    <id>http://www.nealma.com/2016/04/20/spring-boot-1-how-to-use/</id>
    <published>2016-04-20T03:46:45.000Z</published>
    <updated>2016-09-20T07:25:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring发展到现在，在java框架中一直在坚守，也在不断的改进。<br>Spring-Boot的出现，并不是什么新技术，而是简化我们的开发步骤和配置，让我们愉快的玩耍吧。</p>
<p>本记录使用的开发环境：<br>os: mac<br>ide: idea<br>build: maven</p>
<h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><p>Spring-Boot是从run开始的，所以你的项目必须包含类似以下的一段代码<br>我习惯于放在com.domain.project包下</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(Application.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="POM依赖"><a href="#POM依赖" class="headerlink" title="POM依赖"></a>POM依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div></pre></td></tr></table></figure>
<p>当然也可以不依赖，使用scope=import</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="使用Spring-Boot-Maven插件"><a href="#使用Spring-Boot-Maven插件" class="headerlink" title="使用Spring-Boot-Maven插件"></a>使用Spring-Boot-Maven插件</h3><p>将项目打包成“flat jars”，独立可执行jar包</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Starter-POMs"><a href="#Starter-POMs" class="headerlink" title="Starter POMs"></a>Starter POMs</h3><p>starts是开箱即用，方便的的依赖集合，不用在像spring那样一个一个的配置依赖了<br>只需要引入如下就可以跑起来了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line"></div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</div><div class="line">    &lt;/dependency</div><div class="line"></div><div class="line">...</div></pre></td></tr></table></figure>
<h3 id="跑起来"><a href="#跑起来" class="headerlink" title="跑起来"></a>跑起来</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean spring-boot:run</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring发展到现在，在java框架中一直在坚守，也在不断的改进。&lt;br&gt;Spring-Boot的出现，并不是什么新技术，而是简化我们的开发步骤和配置，让我们愉快的玩耍吧。&lt;/p&gt;
&lt;p&gt;本记录使用的开发环境：&lt;br&gt;os: mac&lt;br&gt;ide: idea&lt;br&gt;bui
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Java" scheme="http://www.nealma.com/tags/Java/"/>
    
      <category term="Spring" scheme="http://www.nealma.com/tags/Spring/"/>
    
      <category term="Spring-Boot" scheme="http://www.nealma.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>我的 Mac OS 软件列表</title>
    <link href="http://www.nealma.com/2016/03/29/mac-used-app/"/>
    <id>http://www.nealma.com/2016/03/29/mac-used-app/</id>
    <published>2016-03-29T03:46:45.000Z</published>
    <updated>2016-09-06T02:01:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>自己在使用过程中积累的一些应用软件，推荐给大家。</p>
<h3 id="Command-Line"><a href="#Command-Line" class="headerlink" title="Command Line"></a>Command Line</h3><p><a href="http://brew.sh/" target="_blank" rel="external">homebrew</a>                                应用程序管理工具<br><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">oh-my-zsh</a>    包装过的zsh<br><a href="https://github.com/wting/autojump" target="_blank" rel="external">autojump</a>            高效跳转到历史路径的命令行辅助工具<br><a href="https://tmux.github.io/" target="_blank" rel="external">tmux</a>                            终端加强工具</p>
<h3 id="Dev-Tools"><a href="#Dev-Tools" class="headerlink" title="Dev Tools"></a>Dev Tools</h3><p><a href="https://www.jetbrains.com/idea/" target="_blank" rel="external">idea</a>                    IDE高效开发工具<br><a href="https://www.sublimetext.com/" target="_blank" rel="external">Sublime Text</a>            漂亮文本编辑器<br><a href="https://www.charlesproxy.com/" target="_blank" rel="external">Charles</a>                网络抓包工具<br><a href="https://www.mysql.com/products/workbench/" target="_blank" rel="external">MySQL Workbench</a>                                        数据库工具</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己在使用过程中积累的一些应用软件，推荐给大家。&lt;/p&gt;
&lt;h3 id=&quot;Command-Line&quot;&gt;&lt;a href=&quot;#Command-Line&quot; class=&quot;headerlink&quot; title=&quot;Command Line&quot;&gt;&lt;/a&gt;Command Line&lt;/h3&gt;&lt;
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Mac OS" scheme="http://www.nealma.com/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用攻略</title>
    <link href="http://www.nealma.com/2016/03/18/hexo-how-to-use/"/>
    <id>http://www.nealma.com/2016/03/18/hexo-how-to-use/</id>
    <published>2016-03-18T03:46:45.000Z</published>
    <updated>2016-09-05T10:50:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>对生活、学习或者工作中，遇到的问题以及解决的方案，已blog的形式存于互联网，共享给需要帮助的人。<br>但是从各大博客网站辗转于免费空间，最后落脚在github，hexo给我们提供了方便的blog模版，<br>让我们可以安心的写内容了，hexo使用过程中的一些记录，便于后来人。</p>
<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h3><p>nodejs、git、hexo,具体步骤，请Google。<br>我的环境是Mac OS<br>so ：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">brew install npm（Node Packaged Modules）</div><div class="line">brew install n -g</div><div class="line">n ls</div><div class="line">n 6.5.0</div><div class="line">brew install git</div><div class="line">npm install hexo-cli -g</div><div class="line">npm install hexo --save</div><div class="line">hexo g</div><div class="line">hexo s</div><div class="line">hexo d</div><div class="line"></div><div class="line">#如果报错的话，执行</div><div class="line">npm install hexo --no-optional</div></pre></td></tr></table></figure></p>
<h3 id="2-创建分类页面-新建一个页面-命名为-categories-关于、标签类似"><a href="#2-创建分类页面-新建一个页面-命名为-categories-关于、标签类似" class="headerlink" title="2 创建分类页面, 新建一个页面, 命名为 categories, 关于、标签类似"></a>2 创建分类页面, 新建一个页面, 命名为 categories, 关于、标签类似</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page categories</div></pre></td></tr></table></figure>
<h3 id="3-编辑categories页面-内容"><a href="#3-编辑categories页面-内容" class="headerlink" title="3 编辑categories页面, 内容:"></a>3 编辑categories页面, 内容:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 分类</div><div class="line">type: categories</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure>
<h3 id="4-设置分类列表"><a href="#4-设置分类列表" class="headerlink" title="4 设置分类列表"></a>4 设置分类列表</h3><p>不需要特别的配置，只需要在写文章的时候，加上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#eg. tech</div><div class="line">categories: tech</div></pre></td></tr></table></figure></p>
<h3 id="github绑定域名问题"><a href="#github绑定域名问题" class="headerlink" title="github绑定域名问题"></a>github绑定域名问题</h3><p>github上有个绑定自己的域名功能，可是每次重新部署(hexo deploy)的时候，都需要重新设置，简直死的心都有了。<br>幸好看到一个blog说可以在source目录下新建CNAME文件，注意全部大写并且没有后缀。<br>CNAME文件中只能有一行：例如:xxx.com<br>不要有http(s)://，写多个域名也没用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对生活、学习或者工作中，遇到的问题以及解决的方案，已blog的形式存于互联网，共享给需要帮助的人。&lt;br&gt;但是从各大博客网站辗转于免费空间，最后落脚在github，hexo给我们提供了方便的blog模版，&lt;br&gt;让我们可以安心的写内容了，hexo使用过程中的一些记录，便于后
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="hexo" scheme="http://www.nealma.com/tags/hexo/"/>
    
      <category term="blog" scheme="http://www.nealma.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Nginx Configuration</title>
    <link href="http://www.nealma.com/2016/03/16/nginx-configuration/"/>
    <id>http://www.nealma.com/2016/03/16/nginx-configuration/</id>
    <published>2016-03-16T03:46:45.000Z</published>
    <updated>2016-08-06T04:26:21.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Download-nginx"><a href="#Download-nginx" class="headerlink" title="Download nginx"></a>Download nginx</h3><p><a href="http://nginx.org/download/nginx-1.8.0.tar.gz" target="_blank" rel="external">1.8.0</a></p>
<h3 id="Download-openssl"><a href="#Download-openssl" class="headerlink" title="Download openssl"></a>Download openssl</h3><p><a href="https://www.openssl.org/source/openssl-1.0.2h.tar.gz" target="_blank" rel="external">1.0.2h</a></p>
<h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd nginx_home</div><div class="line">./configure --prefix=/usr/local/nginx \</div><div class="line">            --with-http_ssl_module \</div><div class="line">            --with-openssl=//home/lingyitech/sw/openssl-1.0.2h \</div><div class="line">            --with-openssl-opt=&quot;enable-tlsext&quot;</div><div class="line">sudo make &amp;&amp; sudo make install</div></pre></td></tr></table></figure>
<h3 id="Multiple-Host"><a href="#Multiple-Host" class="headerlink" title="Multiple Host"></a>Multiple Host</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">server  &#123;</div><div class="line">        listen 443;</div><div class="line">        server_name   www.nealma.com;</div><div class="line">        index index.html index.htm index.php;</div><div class="line">        root  /data/wwwroot/www.nealma.com/webroot;</div><div class="line">        ssl on;</div><div class="line">        ssl_certificate &quot;/usr/local/nginx/conf/ssl/www.nealma.com.public.cer&quot;;</div><div class="line">        ssl_certificate_key &quot;/usr/local/nginx/conf/ssl/www.nealma.com.private.key&quot;;</div><div class="line">        ...</div><div class="line">&#125;</div><div class="line"></div><div class="line">server  &#123;</div><div class="line">        listen 443;</div><div class="line">        server_name   www.malingyi.com;</div><div class="line">        index index.html index.htm index.php;</div><div class="line">        root  /data/wwwroot/www.malingyi.com/webroot;</div><div class="line">        ssl on;</div><div class="line">        ssl_certificate 	  &quot;/usr/local/nginx/conf/ssl/www.malingyi.com.public.cer&quot;;</div><div class="line">        ssl_certificate_key &quot;/usr/local/nginx/conf/ssl/www.malingyi.com.private.key&quot;;</div><div class="line">        ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="可能会出现的问题"><a href="#可能会出现的问题" class="headerlink" title="可能会出现的问题"></a>可能会出现的问题</h3><ul>
<li>却少gcc工具</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum -y install gcc gcc-c++ autoconf automake make</div></pre></td></tr></table></figure>
<ul>
<li>新的服务器缺少pcre</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum -y install pcre-devel</div></pre></td></tr></table></figure>
<ul>
<li>新的服务器缺少zlib</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum -y install zlib-devel</div></pre></td></tr></table></figure>
<ul>
<li>ngnix 配置缺少</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server_names_hash_bucket_size 32;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Download-nginx&quot;&gt;&lt;a href=&quot;#Download-nginx&quot; class=&quot;headerlink&quot; title=&quot;Download nginx&quot;&gt;&lt;/a&gt;Download nginx&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://nginx.
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="Nginx" scheme="http://www.nealma.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 添加用户</title>
    <link href="http://www.nealma.com/2016/03/15/centos-65-add-user/"/>
    <id>http://www.nealma.com/2016/03/15/centos-65-add-user/</id>
    <published>2016-03-15T03:46:45.000Z</published>
    <updated>2016-08-06T02:54:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>每次添加用户总是忘记，总是Google一下，没办法，只好记录下来。</p>
<h3 id="添加普通用户-用户名为lingyitech"><a href="#添加普通用户-用户名为lingyitech" class="headerlink" title="添加普通用户,用户名为lingyitech"></a>添加普通用户,用户名为lingyitech</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ useradd lingyitech</div></pre></td></tr></table></figure>
<h3 id="更新用户lingyitech密码"><a href="#更新用户lingyitech密码" class="headerlink" title="更新用户lingyitech密码"></a>更新用户lingyitech密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ password lingyitech</div></pre></td></tr></table></figure>
<h3 id="更改lingyitech的用户组，属于root组"><a href="#更改lingyitech的用户组，属于root组" class="headerlink" title="更改lingyitech的用户组，属于root组"></a>更改lingyitech的用户组，属于root组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ usermod -g root lingyitech</div></pre></td></tr></table></figure>
<h3 id="也可以修改-etc-sudoers文件，添加一行"><a href="#也可以修改-etc-sudoers文件，添加一行" class="headerlink" title="也可以修改/etc/sudoers文件，添加一行"></a>也可以修改/etc/sudoers文件，添加一行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lingyitech    ALL=(ALL)       ALL</div></pre></td></tr></table></figure>
<h3 id="还可以修改-etc-passwd文件，将lingyitech的id修改为0"><a href="#还可以修改-etc-passwd文件，将lingyitech的id修改为0" class="headerlink" title="还可以修改/etc/passwd文件，将lingyitech的id修改为0"></a>还可以修改/etc/passwd文件，将lingyitech的id修改为0</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">lingyitech:x:500:500::/home/lingyitech:/bin/bash</div><div class="line">             －－</div><div class="line">＃modify</div><div class="line">lingyitech:x:0:500::/home/lingyitech:/bin/bash</div><div class="line">           －</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每次添加用户总是忘记，总是Google一下，没办法，只好记录下来。&lt;/p&gt;
&lt;h3 id=&quot;添加普通用户-用户名为lingyitech&quot;&gt;&lt;a href=&quot;#添加普通用户-用户名为lingyitech&quot; class=&quot;headerlink&quot; title=&quot;添加普通用户,用户
    
    </summary>
    
      <category term="Tech" scheme="http://www.nealma.com/categories/Tech/"/>
    
    
      <category term="CentOS" scheme="http://www.nealma.com/tags/CentOS/"/>
    
      <category term="Linux" scheme="http://www.nealma.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch</title>
    <link href="http://www.nealma.com/2015/12/18/elasticsearch/"/>
    <id>http://www.nealma.com/2015/12/18/elasticsearch/</id>
    <published>2015-12-18T07:46:45.000Z</published>
    <updated>2016-08-05T04:22:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>ElasticSearch作为分布式搜索引擎，给我们带来了方便。</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Get-elasticsearch-amp-jdbc"><a href="#Get-elasticsearch-amp-jdbc" class="headerlink" title="Get elasticsearch &amp; jdbc"></a>Get elasticsearch &amp; jdbc</h3><p>elasticsearch-rtf: <a href="https://github.com/medcl/elasticsearch-rtf/archive/2.1.1.zip" target="_blank" rel="external">branch 2.1.1</a><br>elasticsearch-jdbc: <a href="https://github.com/jprante/elasticsearch-jdbc/archive/2.1.1.2.zip" target="_blank" rel="external">branch 2.1.1.2</a></p>
<h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./bin/elasticsearch &amp;</div></pre></td></tr></table></figure>
<h3 id="If-do-not-have-lib"><a href="#If-do-not-have-lib" class="headerlink" title="If do not have lib"></a>If do not have lib</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mvn package</div></pre></td></tr></table></figure>
<h3 id="Bind-ip"><a href="#Bind-ip" class="headerlink" title="Bind ip"></a>Bind ip</h3><p>！！！！[import]</p>
<h3 id="Base-command"><a href="#Base-command" class="headerlink" title="Base command"></a>Base command</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ curl -i http://localhost:9200/</div><div class="line">$ curl -X DELETE http://localhost:9200/_all</div></pre></td></tr></table></figure>
<h3 id="Create-index-by-mapping-file"><a href="#Create-index-by-mapping-file" class="headerlink" title="Create index by mapping file"></a>Create index by mapping file</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -XPUT <span class="string">'http://localhost:9200/articles'</span> <span class="_">-d</span>  @/Users/nealpc/work/body.json</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">#body.json</div><div class="line">&#123;</div><div class="line">  &quot;settings&quot;: &#123;</div><div class="line">     &quot;refresh_interval&quot;: &quot;5s&quot;,</div><div class="line">     &quot;number_of_shards&quot; :   1,</div><div class="line">     &quot;number_of_replicas&quot; : 0</div><div class="line">  &#125;,</div><div class="line">  &quot;mappings&quot;: &#123;</div><div class="line">    &quot;_default_&quot;:&#123;</div><div class="line">      &quot;_all&quot;: &#123; &quot;enabled&quot;:  false &#125;</div><div class="line">    &#125;,</div><div class="line">    &quot;articles&quot;: &#123;</div><div class="line">      &quot;dynamic&quot;: false,</div><div class="line">      &quot;properties&quot;: &#123;</div><div class="line">        &quot;title&quot;: &#123;</div><div class="line">          &quot;type&quot;: &quot;string&quot;,</div><div class="line">          &quot;index&quot;: &quot;analyzed&quot;,</div><div class="line">          &quot;fields&quot;: &#123;</div><div class="line">            &quot;cn&quot;: &#123;</div><div class="line">              &quot;type&quot;: &quot;string&quot;,</div><div class="line">              &quot;analyzer&quot;: &quot;ik&quot;</div><div class="line">            &#125;,</div><div class="line">            &quot;en&quot;: &#123;</div><div class="line">              &quot;type&quot;: &quot;string&quot;,</div><div class="line">              &quot;analyzer&quot;: &quot;english&quot;</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;,</div><div class="line">        &quot;content&quot;: &#123;</div><div class="line">          &quot;type&quot;: &quot;string&quot;,</div><div class="line">          &quot;index&quot;: &quot;analyzed&quot;,</div><div class="line">          &quot;fields&quot;: &#123;</div><div class="line">            &quot;cn&quot;: &#123;</div><div class="line">              &quot;type&quot;: &quot;string&quot;,</div><div class="line">              &quot;analyzer&quot;: &quot;ik&quot;</div><div class="line">            &#125;,</div><div class="line">            &quot;en&quot;: &#123;</div><div class="line">              &quot;type&quot;: &quot;string&quot;,</div><div class="line">              &quot;analyzer&quot;: &quot;english&quot;</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Show-all-index-info-of-recovery-…"><a href="#Show-all-index-info-of-recovery-…" class="headerlink" title="Show all index info of recovery …."></a>Show all index info of recovery ….</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -XGET http://localhost:9200/_recovery?pretty=<span class="literal">true</span>&amp;detailed=<span class="literal">true</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ElasticSearch作为分布式搜索引擎，给我们带来了方便。&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/
    
    </summary>
    
      <category term="Tools" scheme="http://www.nealma.com/categories/Tools/"/>
    
    
      <category term="搜索" scheme="http://www.nealma.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>newrelic使用</title>
    <link href="http://www.nealma.com/2015/12/18/newrelic/"/>
    <id>http://www.nealma.com/2015/12/18/newrelic/</id>
    <published>2015-12-18T07:46:45.000Z</published>
    <updated>2016-08-05T05:50:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于Startup公司，在人员配备不足的情况下，集成各路云服务在所难免，newrelic在APM领域走在前面，这里记录下相关使用。</p>
<h3 id="Java-agent-for-web-server"><a href="#Java-agent-for-web-server" class="headerlink" title="Java agent for web server"></a>Java agent for web server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ unzip newrelic-java-xxx.zip <span class="_">-d</span> /path/to/appserver/</div><div class="line">$ <span class="built_in">cd</span> /path/to/appserver/newrelic</div><div class="line">$ java -jar newrelic.jar install</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于Startup公司，在人员配备不足的情况下，集成各路云服务在所难免，newrelic在APM领域走在前面，这里记录下相关使用。&lt;/p&gt;
&lt;h3 id=&quot;Java-agent-for-web-server&quot;&gt;&lt;a href=&quot;#Java-agent-for-web-ser
    
    </summary>
    
      <category term="Tools" scheme="http://www.nealma.com/categories/Tools/"/>
    
    
      <category term="newrelic" scheme="http://www.nealma.com/tags/newrelic/"/>
    
  </entry>
  
</feed>
